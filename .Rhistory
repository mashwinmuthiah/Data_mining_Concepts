library(psych)
fa.parallel(v[,-1],fa="pc",n.iter = 100,show.legend = FALSE,main = "scree plot")
fa.parallel(v[1,4],fa="pc",n.iter = 100,show.legend = FALSE,main = "scree plot")
fa.parallel(v[1,5],fa="pc",n.iter = 100,show.legend = FALSE,main = "scree plot")
v <- Vertebral_Column_Data
View(v)
fa.parallel(v[,6],fa="pc",n.iter = 100,show.legend = FALSE,main = "scree plot")
fa.parallel(v[,-1],fa="pc",n.iter = 100,show.legend = FALSE,main = "scree plot")
fa.parallel(v[,-2],fa="pc",n.iter = 100,show.legend = FALSE,main = "scree plot")
fa.parallel(v[,-5],fa="pc",n.iter = 100,show.legend = FALSE,main = "scree plot")
fa.parallel(v[,-6],fa="pc",n.iter = 100,show.legend = FALSE,main = "scree plot")
fa.parallel(v[,-67,fa="pc",n.iter = 100,show.legend = FALSE,main = "scree plot")
fa.parallel(v[,-7,fa="pc",n.iter = 100,show.legend = FALSE,main = "scree plot")
fa.parallel(v[,-7],fa="pc",n.iter = 100,show.legend = FALSE,main = "scree plot")
v[,1]
v[,-1]
v[,-2]
v[,-7]
cmdscale(v)
cmdscale(v[,-7])
cmdscale(v)
cmdscale(v[,-])
cmdscale(v[,-7])
cmdscale(v[,-7], k = 2, eig = FALSE, add = FALSE, x.ret = FALSE,
list. = eig || add || x.ret)
cmdscale(v[,-7], k = 2, eig = FALSE, add = FALSE, x.ret = FALSE)
cmdscale(v[,-7])
pc<-principal(v[,-7],nfactors = 1)
cmdscale(pc)
pc
cmdscale(pc[,-1])
cmdscale(pc)
rc<-principal(r=v[,-7],nfactors = 2,rotate = "varimax")
rc
cmdscale(pc)
cmdscale(rc)
cmdscale(pc)
Student <- c("John Davis","Angela Williams","Bullwinkle Moose",
"David Jones","Janice Markhammer",
"Cheryl Cushing","Reuven Ytzrhak",
"Greg Knox","Joel England","Mary Rayburn")
math <- c(502, 600, 412, 358, 495, 512, 410, 625, 573, 522)
science <- c(95, 99, 80, 82, 75, 85, 80, 95, 89, 86)
english <- c(25, 22, 18, 15, 20, 28, 15, 30, 27, 18)
roster <- data.frame(Student,math,science,english,stringsAsFactors = FALSE
)
roster
roster <- data.frame(Student,math,science,english,
stringsAsFactors = FALSE)
c<-(1,2,3,4,5,6,7,8)
x<-c(1,2,3,4,5,6,7,8)
mean(x)
sd(x)
sd(x,na.rm = TRUE,trim = 0.5)
sd(x,trim = 0.5,na.rm = TRUE)
mean(x,trim = 0.5,na.rm = TRUE)
sd(x)
round(sd(x))
floor(sd(x))
cealing(sd(x))
ceiling(sd(x))
sd(x)
set.seed(1234)
runif(5)
library(MASS)
mean <- c(230.7, 146.7, 3.6)
sigma <- matrix( c(15360.8, 6721.2, -47.1,
6721.2, 4700.9, -16.5,
-47.1,  -16.5,   0.3), nrow=3, ncol=3)
set.seed(1234)
mydata <- mvrnorm(500, mean, sigma)
mydata
?mvrnorm
mydata[1]
mydata[mean[1]]
mean[mydata$1]
mean[mydata[,1]]
mean[mydata[:,1]]
mydata[1:]
mydata[:]
mydata[,]
mydata[,1]
mean(mydata[,1])
mydata<- as.data.frame(mydata)
names(mydata)<-c(x,y,z)
apply(mydata,1,mean)
array
?apply()
?pretty
x<-pretty(c(3,3),30)
x
x<-pretty(1,30)
x
x<-pretty(c(3,3),30)
mean(x)
y<-dnorm(x)
plot(x,y)
plot(x,y,type = l)
x<-pretty(c(3,3),30)
y<-dnorm(x)
plot(x,y,type = "l")
x<-pretty(c(-3,3),30)
y<-dnorm(x)
plot(x,y,type = "l")
x
count(x)
y
y<-dnorm(x)
length(x)
x <- c("ab", "cde", "fghij")
nchar(x)
length(x)
setwd("C:/Users/ashwi/Desktop/Ashwin/Data_mining_Concepts")
#barplot
?barplot()
library(vcd)
Arthritis
mydata<-Arthritis
table(mydata$Improved)
?table()
count<-table(mydata$Improved)
barplot(count)
barplot(count,horiz = TRUE)
barplot(count,horiz = TRUE,angle = 90)
barplot(count,horiz = TRUE,angle = 50)
barplot(count,horiz = TRUE)
#barplot
?barplot()
library(vcd)
mydata<-Arthritis
count<-table(mydata$Improved)
barplot(count,horiz = TRUE)
barplot(count)
barplot(count,horiz = TRUE,main = "Bar plot")
barplot(count,horiz = TRUE,main = "Horizontal Bar plot",xlab = "Frequency",ylab = "Improvement")
barplot(count,main = "Horizontal Bar plot",ylab = "Frequency",xlab = "Improvement")
barplot(count,main = "Simple Bar plot",ylab = "Frequency",xlab = "Improvement")
plot(mydata$Improved)
plot(mydata$Improved,main = "Simple Bar plot",ylab = "Frequency",xlab = "Improvement")
plot(mydata$Improved,horiz = TRUE,main = "Simple Bar plot",ylab = "Frequency",xlab = "Improvement")
plot(mydata$Improved,horiz = TRUE,main = "Simple Bar plot",xlab = "Frequency",ylab = "Improvement")
attach(Arthritis)
vire(Arthritis)
view(Arthritis)
View(Arthritis)
count<-table(Treatment,Improved)
count
barplot(count)
count<-table(Improved,Treatment)
count
barplot(count)
barplot(count,beside = true)
barplot(count,beside = TRUE)
barplot(count,beside = TRUE,col = c("red","blue","green"))
barplot(count,beside = TRUE,col = brewer.pal(3,"set1"))
barplot(count,beside = TRUE,col = rainbow(3))
barplot(count,beside = TRUE,col = rainbow(4))
barplot(count,beside = TRUE,col = rainbow(3))
barplot(count,beside = TRUE,col = rainbow(3),legend = row.names(count))
library(Hmisc)
barplot(count,beside = TRUE,col = rainbow(3))
legend(x,y,title = "Key",legend = row.names(count),insert = 0.5)
legend(title = "Key",legend = row.names(count),insert = 0.5)
legend(title = "Key",legend = row.names(count))
legend(c(1,1,1,1)title = "Key",legend = row.names(count))
legend(c(1,1,1,1),title = "Key",legend = row.names(count))
legend(1,1,1,1,title = "Key",legend = row.names(count))
barplot(count,beside = TRUE,col = rainbow(3))
legend(locator(1),title = "Key",legend = row.names(count))
barplot(count,beside = TRUE,col = rainbow(3))
legend(locator(1),title = "Key",legend = row.names(count))
barplot(count,beside = TRUE,col = rainbow(3))
legend(locator(1),title = "Key",legend = row.names(count))
legend(locator(1),title = "Key",c(row.names(count)))
legend(locator(1),title = "Key",c(row.names(count),col = rainbow(3)))
legend(locator(1),title = "Key",c(row.names(count),pch = c(15,15,15)col = rainbow(3)))
legend(locator(1),title = "Key",c(row.names(count),pch = c(15,15,15),col = rainbow(3)))
barplot(count,beside = TRUE,col = rainbow(3))
legend(locator(1),title = "Key",c(row.names(count),pch = 15 ,col = rainbow(3)))
library(Hmisc)
barplot(count,beside = TRUE,col = rainbow(3))
legend(locator(1),title = "Key",c("A","B","C"),pch = c(14,15,16),col = rainbow(3)))
legend(locator(1),title = "Key",c("A","B","C"),pch = c(14,15,16),col = rainbow(3))
legend(locator(1),title = "Key",c("A","B","C"),pch = 15 ,col = rainbow(3))
legend(locator(1),title = "Key",c(row.names(count)),pch = 15 ,col = rainbow(3))
library(Hmisc)
barplot(count,beside = TRUE,col = rainbow(3))
legend(locator(1),title = "Key",c(row.names(count)),pch = 15 ,col = rainbow(3))
box(which = "plot")
legend(locator(1),title = "Key",c(row.names(count)),pch = 15 ,col = rainbow(3),main="Grouped Bar Plot")
barplot(count,beside = TRUE,col = rainbow(3),main="Grouped Bar Plot")
legend(locator(1),title = "Key",c(row.names(count)),pch = 15 ,col = rainbow(3))
box(which = "plot")
box()
barplot(count,beside = TRUE,col = rainbow(3),main="Grouped Bar Plot")
legend(locator(1),title = "Key",c(row.names(count)),pch = 15 ,col = rainbow(3))
box()
box("figure")
box("inner")
box("outer")
barplot(count,beside = TRUE,col = rainbow(3),main="Grouped Bar Plot")
legend(locator(1),title = "Key",c(row.names(count)),pch = 15 ,col = rainbow(3))
box("outer")
box("inner")
box(,locator(1"inner")
box(,locator(1),"inner")
box(locator(1),"inner")
barplot(count,beside = TRUE,col = rainbow(3),main="Grouped Bar Plot")
legend(locator(1),title = "Key",c(row.names(count)),pch = 15 ,col = rainbow(3))
state.x77
state.region
states<-data.frame(state.region,state.x77)
states
view(states)
View(states)
means<-aggregate(states,by=states$state.region,mean)
means<-aggregate(states,by=lst(states$state.region),mean)
means<-aggregate(states,by=list(states$state.region),mean)
means
means<-aggregate(states,by=list(states$state.region),FUN = mean())
means<-aggregate(states$Illiteracy,by=list(states$state.region),FUN = mean())
means<-aggregate(states$Illiteracy,by=list(state.region),FUN = mean())
means<-aggregate(states$Illiteracy,by=list(state.region),FUN = mean)
means
means<-aggregate(states$Illiteracy,by=list(states$state.region),FUN = mean)
means
means<-means[order(means$x),]
means
barplot(means)
barplot(means$x)
barplot(means$x,names.arg = means$Group.1)
barplot(means$x,names.arg = means$Group.1,col = rainbow(4))
legend(locator(1),title = "Key",c(means$Group.1),pch = 15,col = rainbow(4))
legend(locator(1),title = "Key",legend =  c(means$Group.1),pch = 15,col = rainbow(4))
legend(locator(1),title = "Key",legend =  c(row.names(means)),pch = 15,col = rainbow(4))
legend(locator(1),title = "Key",legend =  c(means[,2]),pch = 15,col = rainbow(4))
legend(locator(1),title = "Key",legend =  c(means[,1]),pch = 15,col = rainbow(4))
means
means$Group.1
legend(locator(1),title = "Key",legend =  c(means$Group.1),pch = 15,col = rainbow(4))
means$Group.1
legend(locator(1),title = "Key",legend =  c("North Central","Northeast","West","South"),pch = 15,col = rainbow(4))
barplot(means$x,names.arg = means$Group.1,col = rainbow(4))
legend(locator(1),title = "Key",legend =  c("North Central","Northeast","West","South"),pch = 15,col = rainbow(4))
>barplot2()
barplot2()
?barplot2()
library(ggplot2)
?barplot2()
?barplot2
library(ggplot2)
?barplot2
library(gplots)
install.packages(gplots)
install.packages("gplots")
?barplot2
library(gplots)
?barplot2
barplot2(means$x,names.arg = means$Group.1,col = rainbow(4))
barplot2(means$x,names.arg = means$Group.1,col = rainbow(4),density = TRUE)
barplot(means$x,names.arg = means$Group.1,col = rainbow(4))
legend(locator(1),title = "Key",legend =  c("North Central","Northeast","West","South"),pch = 15,col = rainbow(4))
par(mar = c(5,8,4,2))
par(las = 2)
barplot(means$x,names.arg = means$Group.1,col = rainbow(4))
legend(locator(1),title = "Key",legend =  c("North Central","Northeast","West","South"),pch = 15,col = rainbow(4))
par(mar = c(1,1,1,1))
par(las = 2)
barplot(means$x,names.arg = means$Group.1,col = rainbow(4))
par(mar = c(4,1,1,1))
par(las = 2)
barplot(means$x,names.arg = means$Group.1,col = rainbow(4))
par(mar = c(4,2,1,1))
par(las = 2)
barplot(means$x,names.arg = means$Group.1,col = rainbow(4))
par(mar = c(4,4,1,1))
par(las = 2)
barplot(means$x,names.arg = means$Group.1,col = rainbow(4))
par(las = 3)
barplot(means$x,names.arg = means$Group.1,col = rainbow(4))
par(las = 4)
barplot(means$x,names.arg = means$Group.1,col = rainbow(4))
par(las = 1)
barplot(means$x,names.arg = means$Group.1,col = rainbow(4))
legend(locator(1),title = "Key",legend =  c("North Central","Northeast","West","South"),pch = 15,col = rainbow(4))
#spinogram
attach(Arthritis)
count<-table(Treatment,Improved)
spine(count,main="Spinogram Treatment vs Impovement")
spine(count,main="Spinogram Treatment vs Impovement",col = rainbow(3))
spine(count,main="Spinogram Treatment vs Impovement")
spine(count,main="Spinogram Treatment vs Impovement")
par(mfrows = c(2,2))
par(mfrow = c(2,2))
barplot(Arthritis$Treatment)
barplot(c(Arthritis$Treatment))
hist(Arthritis$Treatment)
hist(Arthritis$Age)
barplot(Arthritis$Age)
plot(Arthritis$Age)
plot(Arthritis$Age,Arthritis$Sex)
plot(Arthritis$Age,Arthritis$Improved)
opar<-par(na.action = TRUE)
par(opar)
hist(Arthritis$Age)
opar<- par(no.readonly = TRUE)
par(mfrow = c(2,2))
hist(Arthritis$Age)
par(opar)
hist(Arthritis$Age)
par(opar)
hist(Arthritis$Age)
opar
par(opar)
hist(Arthritis$age)
hist(Arthritis$Age)
opar<-par(no.readonly = TRUE)
par(opar)
hist(Arthritis$Age)
hist(Arthritis$Age)
par(mfrow = c(2,2))
hist(Arthritis$Age)
par(opar)
hist(Arthritis$Age)
opar
par(opar)
hist(Arthritis$Age)
par(op)
opar<-par(no.readonly = TRUE)
par(mfrow = c(2,2))
hist(Arthritis$Age)
par(opar)
hist(Arthritis$Age)
par(mfrow = c(2,2))
hist(mtcars$mpg)
hist(mtcars$mpg,breaks = 12,col = "red",main = "Histogram of MPG",xlab = "MPG")
lines(density(mtcars$mpg),col="blue")
lines(density(mtcars$mpg),col="blue",lwd = 2)
rug(jitter(mtcars$mpg))
lines(density(mtcars$mpg),col="blue",lwd = 2)
par(opar)
par(mfrow = c(2,2))
hist(mtcars$mpg)
hist(mtcars$mpg,freq = FALSE,breaks = 12,col = "red",main = "Histogram of MPG",xlab = "MPG")
par(opar)
par(mfrow = c(2,2))
hist(mtcars$mpg)
hist(mtcars$mpg,breaks = 12,col = "red",main = "Histogram of MPG",xlab = "MPG")
hist(mtcars$mpg,breaks = 12,col = "red",main = "Histogram of MPG",xlab = "MPG",freq = FALSE)
rug(jitter(mtcars$mpg))
lines(density(mtcars$mpg),col="blue",lwd = 2)
hist(mtcars$mpg,breaks = 12,col = "red",main = "Histogram of MPG",xlab = "MPG")
x<-mtcars$mpg
xfit<-seq(min(x),max(x),length = 40)
xfit
yfit<-dnorm(xfit,mean = mean(x),sd = sd(x))
yfit
box()
yfit<-yfit*diff(h$mids[1:2])*length(x)
yfit<-yfit*diff(hsmids[1:2])*length(x)
lines(xfit,yfit,col="blue",lwd = 2)
d<-density(mtcars$mpg)
plot(d)
View(mtcars)
View(mtcars[order(mtcars$mpg)])
View(mtcars[order(mtcars$mpg),])
lines(d)
x<-mtcars$mpg
hist(mtcars$mpg,breaks = 12,col = "red",main = "Histogram of MPG",xlab = "MPG")
plot(d)
lines(d)
hist(mtcars$mpg,breaks = 12,col = "red",main = "Histogram of MPG",xlab = "MPG")
lines(d)
install.packages("sm")
library(sm)
sm.density.compare(mtcars$mpg,mtcars$cyl)
par(lwd = 2)
sm.density.compare(mtcars$mpg,mtcars$cyl)
sm.density.compare(mtcars$mpg,mtcars$cyl)
sm.density.compare(mtcars$mpg,mtcars$cyl,lwd = 2)
par(opar)
sm.density.compare(mtcars$mpg,mtcars$cyl,lwd = 2)
#box plot
boxplot(mtcars$mpg)
#box plot
boxplot(mtcars$mpg,main="Box plot",ylab = "MPG")
boxplot.stats(mtcars$mpg)
boxplot(mpg~cyl,data = mtcars)
boxplot(mpg~cyl,data = mtcars,notch = TRUE)
boxplot(mpg~cyl,data = mtcars)
boxplot(mpg~cyl,data = mtcars,main = "Box plot")
boxplot(mpg~cyl,data = mtcars,notch = TRUE,main - "Notched box plot")
boxplot(mpg~cyl,data = mtcars,notch = TRUE,main = "Notched box plot")
boxplot(mpg~cyl,data = mtcars,notch = TRUE,main = "Notched box plot", varwide = TRUE)
boxplot(mpg~cyl,data = mtcars,notch = TRUE,main = "Notched box plot", varwidth = TRUE)
mtcars$cyl.f<-factor(mtcars$cyl,levels = c(4,6,8),lable=
c("4","6","8"))
mtcars$cyl.f<-factor(mtcars$cyl,levels = c(4,6,8),lables
mtcars$cyl.f<-factor(mtcars$cyl,levels = c(4,6,8),lables=c("4","6","8")
mtcars$cyl.f<-factor(mtcars$cyl,levels = c(4,6,8),lables=c("4","6","8"))
mtcars$cyl.f<-factor(mtcars$cyl,levels = c(4,6,8),
lables=c("4","6","8"))
mtcars$cyl.f<-factor(mtcars$cyl,levels = c(4,6,8),labels = c("4","6","8"))
mtcars$am.f<-factor(mtcars$am,levels = c(0,1),labels = c("auto","standard"))
boxplot(mpg~cyl.f*am.f,main = "COnbined box plot")
boxplot(mpg~cyl.f*am.f,data = mtcars,main = "COnbined box plot")
boxplot(mpg~am.f,data*cyl.f = mtcars,main = "COnbined box plot")
boxplot(mpg~am.f,data*cyl.f,data = mtcars,main = "COnbined box plot")
boxplot(mpg~am.f,data*cyl.f,data = mtcars,main = "COnbined box plot")
boxplot(mpg~am.f*cyl.f,data = mtcars,main = "Conbined box plot")
boxplot(mpg~am.f*cyl.f,data = mtcars,main = "Conbined box plot",col = c("red","blue"))
boxplot(mpg~am.f*cyl.f,data = mtcars,main = "Conbined box plot",col = c("red","blue"),ylim = c(10,40))
boxplot(mpg~am.f*cyl.f,data = mtcars,main = "Conbined box plot",col = c("red","blue"),ylim = c(10,30))
boxplot(mpg~am.f*cyl.f,data = mtcars,main = "Conbined box plot",col = c("red","blue"),ylim = c(10,35))
#violin plot
install.packages("vioplots")
#violin plot
install.packages("vioplot")
x1<-mtcars$mpg[mtcars$cyl == 4]
x2<-mtcars$mpg[mtcars$cyl == 6]
x3<-mtcars$mpg[mtcars$cyl == 8]
vioplot(x1,x2,x3)
library(vioplot)
vioplot(x1,x2,x3)
vioplot(x1,x2,x3,col = rainbow(3))
vioplot(mph~cyl,data = mtcars)
vioplot(mtcars$mph ~ mtcars$cyl,data = mtcars)
vioplot(mtcars$mph ~ mtcars$cyl)
install.packages("grid")
install.packages("grid")
library(grid)
cap <- grid.cap()
grid.newpage()
grid.raster(cap, vp=viewport(angle=30))
plot(1:10, rnorm(10))
library(grid)
cap <- grid.cap()
grid.newpage()
grid.raster(cap, vp=viewport(angle=30))
vioplot(x1,x2,x3,col = rainbow(3))
install.packages("gridGraphics")
library(gridGraphics)
grab_grob <- function(){
grid.echo()
grid.grab()
}
g <- grab_grob()
grid.newpage()
pushViewport(viewport(width=0.7,angle=30))
grid.draw(g)
pushViewport(viewport(width=0.7,angle=90))
grid.draw(g)
plot(1:10)
grid.draw(g)
pushViewport(viewport(width=0.7,angle=90))
grid.draw(g)
pushViewport(viewport(width=0.7,angle=-90))
grid.draw(g)
pushViewport(viewport(width=0.7,angle=90))
grid.draw(g)
vioplot(x1,x2,x3,col = rainbow(3))
library(gridGraphics)
grab_grob <- function(){
grid.echo()
grid.grab()
}
g <- grab_grob()
grid.newpage()
pushViewport(viewport(width=0.7,angle=90))
grid.draw(g)
grid.newpage()
pushViewport(viewport(width=0.7,angle=-90))
grid.draw(g)
vioplot(x1,x2,x3,col = rainbow(3))
#dot chart
dotchart(mtcars$mpg, labels=row.names(mtcars), cex=.7,
main="Gas Mileage for Car Models",
xlab="Miles Per Gallon")
#dot chart
dotchart(mtcars$mpg, labels=row.names(mtcars))
#dot chart
dotchart(mtcars$mpg, labels=row.names(mtcars),cex = 0.5)
#dot chart
dotchart(mtcars$mpg, labels=row.names(mtcars),cex = 0.8)
x<-mtcars[order(mtcars$mpg),]
x$cyl <-factor(x$cyl)
x$color[x$cyl==6]<-"blue"
x$color[x$cyl==8]<-"green"
x$color[x$cyl==4]<-"red"
dotplot(x$mpg,label = row.names(x),col = x$color)
dotchart(x$mpg,label = row.names(x),col = x$color)
dotchart(x$mpg,label = row.names(x),col = x$color,groups = x$cyl)
#x<-mtcars[order(mtcars$mpg),]
x<-mtcars
#x$cyl <-factor(x$cyl)
x$color[x$cyl==4]<-"red"
x$color[x$cyl==6]<-"blue"
x$color[x$cyl==8]<-"green"
dotchart(x$mpg,label = row.names(x),col = x$color,groups = x$cyl)
#<-mtcars[order(mtcars$mpg),]
x<-mtcars
x$cyl <-factor(x$cyl)
x$color[x$cyl==4]<-"red"
x$color[x$cyl==6]<-"blue"
x$color[x$cyl==8]<-"green"
dotchart(x$mpg,label = row.names(x),col = x$color,groups = x$cyl)
x<-mtcars[order(mtcars$mpg),]
x$cyl <-factor(x$cyl)
x$color[x$cyl==4]<-"red"
x$color[x$cyl==6]<-"blue"
x$color[x$cyl==8]<-"green"
dotchart(x$mpg,label = row.names(x),col = x$color,groups = x$cyl)
