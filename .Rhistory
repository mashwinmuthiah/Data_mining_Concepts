housing.df<-read.csv("C:\\Users\\ashwi\\Desktop\\R\\DMBA-R-datasets\\DMBA-R-datasets\\bostonhousing.csv")
housing.df<-read.csv("C:\\Users\\ashwi\\Desktop\\R\\DMBA-R-datasets\\DMBA-R-datasets\\bostonhousing.csv",header = TRUE)
head(housing.df)
## line chart for the Amtrak data
Amtrak.df <- read.csv("C:\\Users\\ashwi\\Desktop\\R\\DMBA-R-datasets\\DMBA-R-datasets\\Amtrak.csv")
## line chart for the Amtrak data
Amtrak.df <- read.csv("C:\\Users\\ashwi\\Desktop\\R\\DMBA-R-datasets\\DMBA-R-datasets\\Amtrak.csv",header = TRUE)
## line chart for the Amtrak data
Amtrak.df <- read.csv("C:\\Users\\ashwi\\Desktop\\R\\DMBA-R-datasets\\DMBA-R-datasets\\Amtrak-data.csv",header = TRUE)
# use time series analysis
library(forecast)
# use time series analysis
library(forecast)
install.packages("forecast")
# use time series analysis
library(forecast)
ridership.ts <- ts(Amtrak.df$Ridership, start = c(1991, 1), end = c(2004, 3), freq = 12)
plot(ridership.ts, xlab = "Year", ylab = "Ridership (in 000s)", ylim = c(1300, 2300))
## Boston housing data
housing.df <- read.csv("BostonHousing.csv")
## scatter plot with axes names
plot(housing.df$MEDV ~ housing.df$LSTAT, xlab = "MDEV", ylab = "LSTAT")
# alternative plot with ggplot
library(ggplot2)
ggplot(housing.df) + geom_point(aes(x = LSTAT, y = MEDV), colour = "navy", alpha = 0.7)
## barchart of CHAS vs. mean MEDV
# compute mean MEDV per CHAS = (0, 1)
data.for.plot <- aggregate(housing.df$MEDV, by = list(housing.df$CHAS), FUN = mean)
names(data.for.plot) <- c("CHAS", "MeanMEDV")
barplot(data.for.plot$MeanMEDV, names.arg = data.for.plot$CHAS,
xlab = "CHAS", ylab = "Avg. MEDV")
# alternative plot with ggplot
ggplot(data.for.plot) + geom_bar(aes(x = CHAS, y = MeanMEDV), stat = "identity")
## barchart of CHAS vs. % CAT.MEDV
data.for.plot <- aggregate(housing.df$CAT..MEDV, by = list(housing.df$CHAS), FUN = mean)
names(data.for.plot) <- c("CHAS", "MeanCATMEDV")
barplot(data.for.plot$MeanCATMEDV * 100, names.arg = data.for.plot$CHAS,
xlab = "CHAS", ylab = "% of CAT.MEDV")
dfw<-read.csv("C:\Users\ashwi\Desktop\Ashwin\PS_DS\psds_data\airline_delay_causes")
dfw<-read.csv("C:\\Users\\ashwi\\Desktop\\Ashwin\\PS_DS\\psds_data\\airline_delay_causes")
dfw<-read.csv("C:\\Users\\ashwi\\Desktop\\Ashwin\\PS_DS\\psds_data\\airline_delay_causes")
dfw<-read.csv("C:\\Users\\ashwi\\Desktop\\Ashwin\\PS_DS\\psds_data\\airline_delay_causes.csv")
barplot(as.matrix(dfw)/6,cex.axis=0.5)
barplot(as.matrix(dfw)/6, cex.axis=.5)
sp500_px <- read.csv('C:\\Users\\ashwi\\Desktop\\Ashwin\\PS_DS\\psds_data\\sp500_px.csv')
sp500_sym <- read.csv('C:\\Users\\ashwi\\Desktop\\Ashwin\\PS_DS\\psds_data\\sp500_sym.csv', stringsAsFactors = FALSE)
read.csv("C:\\Users\\ashwi\\Desktop\\Ashwin\\PS_DS\\psds_data\\k_tax.csv")
read.csv("C:\\Users\\ashwi\\Desktop\\Ashwin\\PS_DS\\psds_data\\kc_tax.csv")
kc_tax<-read.csv("C:\\Users\\ashwi\\Desktop\\Ashwin\\PS_DS\\psds_data\\kc_tax.csv")
kc_tax0<-subset(kc_tax,TaxAssessedValue < 750000 & SqFtTotLiving>100 & SqFtTotLiving<3500)
length(kc_tax0)
kc_tax0
nrow(kc_tax0)
ncol(kc_tax0)
ncol(kc_tax0)
a<-kc_tax(TaxAssessedValue < 750000 & SqFtTotLiving>100 & SqFtTotLiving<3500)
a<-kc_tax(kc_tax$TaxAssessedValue < 750000 & kc_tax$SqFtTotLiving>100 & kc_tax$SqFtTotLiving<3500)
a<-kc_tax(kc_tax$TaxAssessedValue < "750000" & kc_tax$SqFtTotLiving>"100" & kc_tax$SqFtTotLiving<"3500")
a<-kc_tax[kc_tax$TaxAssessedValue < "750000" & kc_tax$SqFtTotLiving>"100" & kc_tax$SqFtTotLiving<"3500"]
a<-Kc_tax[kc_tax$TaxAssessedValue < "750000" & kc_tax$SqFtTotLiving>"100" & kc_tax$SqFtTotLiving<"3500"]
a<-kc_tax[kc_tax$TaxAssessedValue < "750000" & kc_tax$SqFtTotLiving>"100" & kc_tax$SqFtTotLiving<"3500"]
a<- kc_tax [kc_tax$TaxAssessedValue < "750000" & kc_tax$SqFtTotLiving>"100" & kc_tax$SqFtTotLiving<"3500"]
ncol(kc_tax0)
library(ggplot2)
ggplot(kc_tax0, (aes(x=SqFtTotLiving, y=TaxAssessedValue))) + stat_binhex(colour="white") + theme_bw() + scale_fill_gradient(low="white", high="black") + labs(x="Finished Square Feet", y="Tax Assessed Value")
install.packages("hexbin")
ggplot(kc_tax0, (aes(x=SqFtTotLiving, y=TaxAssessedValue))) + stat_binhex(colour="white") + theme_bw() + scale_fill_gradient(low="white", high="black") + labs(x="Finished Square Feet", y="Tax Assessed Value")
ggplot(kc_tax0, (aes(x=SqFtTotLiving, y=TaxAssessedValue)))
ggplot(kc_tax0, (aes(x=SqFtTotLiving, y=TaxAssessedValue))) +  stat_binhex(colour="white") + theme_bw() + scale_fill_gradient(low="white", high="black") + labs(x="Finished Square Feet", y="Tax Assessed Value")
ggplot(kc_tax0, (aes(x=SqFtTotLiving, y=TaxAssessedValue))) +  stat_binhex(colour="white")
ggplot(kc_tax0, (aes(x=SqFtTotLiving, y=TaxAssessedValue)))
stat_binhex(colour="white")
ggplot(kc_tax0, (aes(x=SqFtTotLiving, y=TaxAssessedValue))) +  stat_binhex(colour="white")
ggplot(kc_tax0, (aes(x=SqFtTotLiving, y=TaxAssessedValue))) +  stat_binhex(colour="white") + theme_bw()
ggplot(kc_tax0, (aes(x=SqFtTotLiving, y=TaxAssessedValue))) +  stat_binhex(colour="white")
ggplot(kc_tax0, (aes(x=SqFtTotLiving, y=TaxAssessedValue))) +  stat_binhex(colour="white")  + scale_fill_gradient(low="white", high="black")
ggplot(kc_tax0, (aes(x=SqFtTotLiving, y=TaxAssessedValue))) +  stat_binhex(colour="white")  +theme_bw()+ scale_fill_gradient(low="white", high="black")
ggplot(kc_tax0, (aes(x=SqFtTotLiving, y=TaxAssessedValue))) +  stat_binhex(colour="white")  +theme_bw()+ scale_fill_gradient(low="white", high="red")
x <- rnorm(20000)
y <- rnorm(20000)
hbin <- hexbin(x,y, xbins = 40)
plot(hbin)
x <- kc_tax0$SqFtTotLiving
y <- kc_tax0$TaxAssessedValue
hbin <- hexbin(x,y, xbins = 40)
plot(hbin)
ggplot(kc_tax0, aes(SqFtTotLiving, TaxAssessedValue)) +
theme_bw() +
geom_point( alpha=0.1) +
geom_density2d(colour="white") +
labs(x="Finished Square Feet", y="Tax Assessed Value")
ggplot(kc_tax0, aes(SqFtTotLiving, TaxAssessedValue)) + theme_bw() + geom_point( alpha=0.1) + geom_density2d(colour="white") + labs(x="Finished Square Feet", y="Tax Assessed Value")
ggplot(kc_tax0, aes(SqFtTotLiving, TaxAssessedValue)) + theme_bw() + geom_point( alpha=0.1) + geom_density2d(colour="white") + labs(x="Finished Square Feet", y="Tax Assessed Value")
ctor<- contour(x,y)
ctor<- contour(x,y,alpha=0.1)
ggplot(kc_tax0, aes(SqFtTotLiving, TaxAssessedValue)) +
theme_bw() +
geom_point( alpha=0.1) +
geom_density2d(colour="white") +
labs(x="Finished Square Feet", y="Tax Assessed Value")
boxplot(pct_delay ~ airline, data=airline_stats, ylim=c(0, 50))
boxplot(pct_delay ~ airline, data=airline_stats, ylim=c(0, 50))
airline<-read.csv("C:\\Users\\ashwi\\Desktop\\Ashwin\\PS_DS\\psds_data\\airline_stats.csv")
boxplot(pct_delay ~ airline, data=airline_stats, ylim=c(0, 50))
boxplot(pct_delay = airline, data=airline_stats, ylim=c(0, 50))
boxplot(data=airline_stats, ylim=c(0, 50))
boxplot(data=airline_stats.csv, ylim=c(0, 50))
ggplot(kc_tax0,zipcode %in% c((98188, 98105, 98108, 98126)),aes(x=SqFtTotLiving, y=TaxAssessedValue))+stat_bin_hex(color ='white') +theme_bw()+scale_fill_gradient(low = "white",high = "red")
ggplot(kc_tax0,zipcode %in% c((98188,98105,98108,98126)),aes(x=SqFtTotLiving, y=TaxAssessedValue))+stat_bin_hex(color ='white') +theme_bw()+scale_fill_gradient(low = "white",high = "red")
ggplot(subset(kc_tax0, ZipCode %in% c(98188, 98105, 98108, 98126)),
aes(x=SqFtTotLiving, y=TaxAssessedValue)) +
stat_binhex(colour="white") +
theme_bw() +
scale_fill_gradient( low="white", high="blue") +
labs(x="Finished Square Feet", y="Tax Assessed Value") +
facet_wrap("ZipCode")
ggplot2(subset(kc_tax0, ZipCode %in% c(98188, 98105, 98108, 98126)),aes(x=SqFtTotLiving, y=TaxAssessedValue)) +stat_binhex(colour="white") +theme_bw() +scale_fill_gradient( low="white", high="blue") +facet_wrap("ZipCode")
library(ggplot)
library(ggplot2)
ggplot(subset(kc_tax0, ZipCode %in% c(98188, 98105, 98108, 98126)),aes(x=SqFtTotLiving, y=TaxAssessedValue)) +stat_binhex(colour="white") +theme_bw() +scale_fill_gradient( low="white", high="blue") +facet_wrap("ZipCode")
ggplot(kc_tax0,zipcode %in% c((98188,98105,98108,98126)),aes(x=SqFtTotLiving, y=TaxAssessedValue))+stat_bin_hex(color ='white') +theme_bw()+scale_fill_gradient(low = "white",high = "red")
ggplot(subset(kc_tax0,zipcode %in% c((98188,98105,98108,98126)),aes(x=SqFtTotLiving, y=TaxAssessedValue))+stat_bin_hex(color ='white') +theme_bw()+scale_fill_gradient(low = "white",high = "red")
library(ggplot2)
ggplot(subset(kc_tax0,zipcode %in% c((98188,98105,98108,98126)),aes(x=SqFtTotLiving, y=TaxAssessedValue))+stat_bin_hex(color ='white') +theme_bw()+scale_fill_gradient(low = "white",high = "red")
ggplot(subset(kc_tax0,zipcode %in% c((98188,98105,98108,98126)),aes(x=SqFtTotLiving, y=TaxAssessedValue))+stat_bin_hex(color ='white') +theme_bw()+scale_fill_gradient(low = "white",high = "red")
ggplot(subset(kc_tax0,ZipCode %in% c(98188, 98105, 98108, 98126)),aes(x=SqFtTotLiving, y=TaxAssessedValue)) +stat_binhex(colour="white") +theme_bw() +scale_fill_gradient( low="white", high="blue") +facet_wrap("ZipCode")
ggplot(subset(kc_tax0,zipcode %in% c(98188,98105,98108,98126)),aes(x=SqFtTotLiving, y=TaxAssessedValue))+stat_bin_hex(color ='white') +theme_bw()+scale_fill_gradient(low = "white",high = "red")
ggplot(subset(kc_tax0,zipcode %in% c(98188,98105,98108,98126)),aes(x=SqFtTotLiving, y=TaxAssessedValue))+stat_bin_hex(color ='white') +theme_bw()+scale_fill_gradient(low = "white",high = "red") + facet_wrap("ZipCode")
98188, 98105, 98108, 98126)),aes(x=SqFtTotLiving, y=TaxAssessedValue)) +stat_binhex(colour="white") +theme_bw() +scale_fill_gradient( low="white", high="blue") +facet_wrap("ZipCode")
library(ggplot2)
ggplot(subset(kc_tax0,ZipCode %in% c(98188, 98105, 98108, 98126)),aes(x=SqFtTotLiving, y=TaxAssessedValue)) +stat_binhex(colour="white") +theme_bw() +scale_fill_gradient( low="white", high="blue") +facet_wrap("ZipCode")
install.packages('IRkernel')
IRkernel::installspec()
IRkernel::installspec()
devtools::install_github('IRkernel/IRkernel')
IRkernel::installspec(user = FALSE)
install.packages(c('repr','IRdisplay','crayon','pbdZMQ','devtools'))
install.packages(c("repr", "IRdisplay", "crayon", "pbdZMQ", "devtools"))
install.packages(c("repr", "IRdisplay", "crayon", "pbdZMQ", "devtools"))
devtools::install_github('IRkernel/IRkernel')
IRkernel::installspec()
IRkernel::installspec()
install.packages('IRkernel')
install.packages("IRkernel")
IRkernel::installspec()
IRkernel::installspec(name = 'ir33', displayname = 'R 3.3')
IRkernel::installspec(name = 'ir32', displayname = 'R 3.2')
IRkernel::installspec()
IRkernel::installspec(user=FALSE)
conda install -c r r-irkernel
library(readr)
Vertebral_Column_Data <- read_csv("C:/Users/ashwi/Desktop/Ashwin/Making_sense_of_data/IE7275 working/Vertebral Column Data.csv")
View(Vertebral_Column_Data)
v <- Vertebral_Column_Data
fa.parallel(v,fa="pc",n.iter = 100,show.legend = FALSE,main = "scree plot")
v <- Vertebral_Column_Data
library(psych)
fa.parallel(v,fa="pc",n.iter = 100,show.legend = FALSE,main = "scree plot")
fa.parallel(v[,],fa="pc",n.iter = 100,show.legend = FALSE,main = "scree plot")
fa.parallel(v[,-1],fa="pc",n.iter = 100,show.legend = FALSE,main = "scree plot")
v <- Vertebral_Column_Data
library(psych)
fa.parallel(v[,-1],fa="pc",n.iter = 100,show.legend = FALSE,main = "scree plot")
fa.parallel(v[1,4],fa="pc",n.iter = 100,show.legend = FALSE,main = "scree plot")
fa.parallel(v[1,5],fa="pc",n.iter = 100,show.legend = FALSE,main = "scree plot")
v <- Vertebral_Column_Data
View(v)
fa.parallel(v[,6],fa="pc",n.iter = 100,show.legend = FALSE,main = "scree plot")
fa.parallel(v[,-1],fa="pc",n.iter = 100,show.legend = FALSE,main = "scree plot")
fa.parallel(v[,-2],fa="pc",n.iter = 100,show.legend = FALSE,main = "scree plot")
fa.parallel(v[,-5],fa="pc",n.iter = 100,show.legend = FALSE,main = "scree plot")
fa.parallel(v[,-6],fa="pc",n.iter = 100,show.legend = FALSE,main = "scree plot")
fa.parallel(v[,-67,fa="pc",n.iter = 100,show.legend = FALSE,main = "scree plot")
fa.parallel(v[,-7,fa="pc",n.iter = 100,show.legend = FALSE,main = "scree plot")
fa.parallel(v[,-7],fa="pc",n.iter = 100,show.legend = FALSE,main = "scree plot")
v[,1]
v[,-1]
v[,-2]
v[,-7]
cmdscale(v)
cmdscale(v[,-7])
cmdscale(v)
cmdscale(v[,-])
cmdscale(v[,-7])
cmdscale(v[,-7], k = 2, eig = FALSE, add = FALSE, x.ret = FALSE,
list. = eig || add || x.ret)
cmdscale(v[,-7], k = 2, eig = FALSE, add = FALSE, x.ret = FALSE)
cmdscale(v[,-7])
pc<-principal(v[,-7],nfactors = 1)
cmdscale(pc)
pc
cmdscale(pc[,-1])
cmdscale(pc)
rc<-principal(r=v[,-7],nfactors = 2,rotate = "varimax")
rc
cmdscale(pc)
cmdscale(rc)
cmdscale(pc)
load(mtcars)
mtcars<-load(mtcars)
load(mtcars)
cars<- mtcars
plot(cars$wt,cars$mpg)
abline(lm(mpg~wt))
abline(with(cars),lm(mpg~wt))
with(cars,{abline(lm(mpg~wt))})
title("Regression of MPG on weight")
setwd("C:/Users/ashwi/Desktop/Ashwin/Data_mining_Concepts")
pdf("mygraph.pdf")
cars<- mtcars
plot(cars$wt,cars$mpg)
with(cars,{abline(lm(mpg~wt))})
title("Regression of MPG on weight")
dev.off()
dose  <- c(20, 30, 40, 45, 60)
drugA <- c(16, 20, 27, 40, 60)
drugB <- c(15, 18, 25, 31, 40)
plot(dose,drugA)
plot(dose,drugA,type = b)
plot(dose,drugA,type = "b"")
plot(dose,drugA,type = "b")
plot(dose,drugA,type = "b")
help(plot)
par()
par(no.readonly = TRUE)
opar<-par(no.readonly = TRUE)
opar
help(par)
par(lty = 2,pch = 5)
plot(dose,drugA)
abline()
plot(dose,drugA,type = "b")
par(opar)
plot(dose,drugA,type = b)
plot(dose,drugA,type = "b")
par(lty = 2,pch = 17)
plot(dose,drugA,type = "b")
par(opar)
plot(dose,drugA,type = "b")
help(par)
help(plot)
plot(dose,drugA,type = "b",lty = 2,pch = 17)
plot(dose,drugA,type = "b",lty = 2,pch = 17,cex = 1.5)
plot(dose,drugA,type = "b",lty = 2,pch = 17,cex = 1.5,lwd = 2)
plot(dose,drugA,type = "b",lty = 2,pch = 17,cex = 1.5,lwd = 2,col = "red")
plot(dose,drugA,type = "b",lty = 2,pch = 17,cex = 1.5,lwd = 2,col = rainbow(10))
plot(dose,drugA,type = "b",lty = 2,pch = 17,cex = 1.5,lwd = 2,col = "blue")
plot(dose,drugA,type = "b",lty = 2,pch = 17,cex = 1.5,lwd = 2,col = c("blue",rainbow(10))
plot(dose,drugA,type = "b",lty = 2,pch = 17,cex = 1.5,lwd = 2,col = c("blue",rainbow(10)))
plot(dose,drugA,type = "b",lty = 2,pch = 17,cex = 1.5,lwd = 2,col = c("blue",rainbow(10)))
col?
?col
help(col)
help("topo.colors")
plot(dose,drugA,type = "b",lty = 2,pch = 17,cex = 1.5,lwd = 2,col = c("blue",topo.colors()))
plot(dose,drugA,type = "b",lty = 2,pch = 17,cex = 1.5,lwd = 2,col = c("blue",topo.colors(5)))
plot(dose,drugA,type = "b",lty = 2,pch = 17,cex = 1.5,lwd = 2,col = c("blue",topo.colors(5)))
plot(dose,drugA,type = "b",lty = 2,pch = 17,cex = 1.5,lwd = 2,col = c("blue", terrain.colors(5)))
display.brewer.all()
install.packages("RColorBrewer")
display.brewer.all()
brewer.pal.info
help(RColorBrewer)
libaray(r="RcolorBrewer")
libaray("RcolorBrewer")
libaray("RColorBrewer")
install.package("RColorBrewer")
install.packages("RColorBrewer")
libaray("RColorBrewer")
library(RColorBrewer)
help(RColorBrewer)
display.brewer.all()
display.brewer.all("YIOrRd")
help(RColorBrewer)
display.brewer.all("BuGn")
display.brewer.all(BuGn)
help(RColorBrewer)
plot(dose,drugA,type = "b",lty = 2,pch = 17,cex = 1.5,lwd = 2,col = c("blue", brewer.pal(3,BuGn)))
plot(dose,drugA,type = "b",lty = 2,pch = 17,cex = 1.5,lwd = 2,col = c("blue", brewer.pal(3,"BuGn")))
n <- 7
mycolors <- brewer.pal(n, "Set1")
barplot(rep(1,n), col=mycolors)
bar<-c(1,2,3,4,5,6,7,8,9)
barplot(, col=mycolors)
barplot(bar, col=mycolors)
mycolors <- brewer.pal(n, "Set2")
bar<-c(1,2,3,4,5,6,7,8,9)
barplot(bar, col=mycolors)
n <- 10
mycolors <- rainbow(n)
pie(rep(1, n), labels=mycolors, col=mycolors)
mygrays <- gray(0:n/n)
pie(rep(1, n), labels=mygrays, col=mygrays)
par(font.lab=3, cex.lab=1.5, font.main=4, cex.main=2)
hist(bar)
barplot(bar)
par(font.lab=3, cex.lab=1.5, font.main=4, cex.main=2 , col= rainbow(10))
barplot(bar)
par(font.lab=3, cex.lab=1.5, font.main=4, cex.main=2 , col= rainbow(10))
barplot(bar)
barplot(bar , col= rainbow(10))
barplot(bar , col= rainbow(10) , main = "Bar plot",xlab = "X-axis",ylab="y-axis")
par(opar)
barplot(bar , col= rainbow(10) , main = "Bar plot",xlab = "X-axis",ylab="y-axis")
windowsFonts(A=windowsFont("Arial Black"),
B=windowsFont("Bookman Old Style"),
C=windowsFont("Comic Sans MS"))
par(pin=c(2,3))
par(pch=18,cex=1.5)
par(cex.axis = 1.5,font.axis = 3)
par(cex=1.5)
par(cex.axis = 1.5,font.axis = 3)
par(opar)
par(pin=c(2,3))
par(cex=1.5)
par(cex.axis = 1.5,font.axis = 3)
plot(dose,drugA,type="b",pch = 19,lty=2,col=c(red,rainbow(10)))
plot(dose,drugA,type="b",pch = 19,lty=2,col=c("red",rainbow(10)))
plot(dose,drugB,type="b",pch = 23,lty=6,col=c("blue",rainbow(10)))
x<-c(1:10)
y<-x
z<-10/x
par(mar = c(5,4,4,8)+0.1)
plot(x,y,type = "b",pch = 21,col="red",yaxt = "n",lty = 3,ann = FALSE)
plot(x,y,type = "b",pch = 21,col="red",yaxt = "n",lty = 3,ann = FALSE)
lines(x,z,type = "b",pch = 22,col="blue",lty = 2)
axis(2,at=x,lables = x,col.axis = "red",las = 2)
axis(4,at=z,labels = round(z,digits = 2),col.axis = "blue",las = 2,cex.axis = 0.7,tick = -0.1)
title("Creating Axis",xlab = "X values",ylab = "Y=X")
par(opar)
library(Hmisc)
install.packages("Hmisc")
library(Hmisc)
minor.tick(nx=2, ny=3, tick.ratio=0.5)
library(Hmisc)
par(opar)
par(pin=c(2,3))
par(cex=1.5)
par(cex.axis = 1.5,font.axis = 3)
plot(dose,drugA,type="b",pch = 19,lty=2,col=c("red",rainbow(10)))
plot(dose,drugB,type="b",pch = 23,lty=6,col=c("blue",rainbow(10)))
x<-c(1:10)
y<-x
z<-10/x
par(mar = c(5,4,4,8)+0.1)
plot(x,y,type = "b",pch = 21,col="red",yaxt = "n",lty = 3,ann = FALSE)
lines(x,z,type = "b",pch = 22,col="blue",lty = 2)
axis(2,at=x,lables = x,col.axis = "red",las = 2)
axis(4,at=z,labels = round(z,digits = 2),col.axis = "blue",las = 2,cex.axis = 0.7,tick = -0.1)
title("Creating Axis",xlab = "X values",ylab = "Y=X")
install.packages("Hmisc")
install.packages("Hmisc")
title("Creating Axis",xlab = "X values",ylab = "Y=X")
library(Hmisc)
abline(v=seq(1, 10, 2), lty=2, col="blue")
x = range(5)
x<- c(1:7)
y<- c(8:14)
plot(x,y)
par(opar)
x<- c(1:7)
y<- c(8:14)
plot(x,y)
abline(h=x,v=y)
abline(h=x)
abline(h=x,lty = 2, col - "red")
abline(h=x,lty = 2, col = "red")
abline(h=c(1,2,3),v=c(4,5,6),lty = 2, col = "red")
abline(h=c(1,2,3),v=c(4,5,6),lty = 2, col = "red",xlim = c(0,14),ylim = c(0,7))
plot(x,y,xlim = c(0,14),ylim = c(0,7)))
plot(x,y,xlim = c(0,14),ylim = c(0,7))
abline(h=c(1,2,3),v=c(4,5,6),lty = 2, col = "red"
abline(h=c(1,2,3),v=c(4,5,6),lty = 2, col = "red")
abline(h=c(1,2,3),v=c(4,5,6),lty = 2, col = "red")
plot(x,y,xlim = c(0,14),ylim = c(0,7))
plot(x,y)
plot(x,y,ylim=c(0, 14))
abline(h=c(1,2,3),v=c(4,5,6),lty = 2, col = "red")
abline(h=x,v=y,lty = 2, col = "red")
plot(x,y,ylim=c(0, 14))
abline(h=x,v=y,lty = 2, col = "red")
abline(h=x,v=y ,lty = 2, col = "red")
abline(v=y,lty = 2, col = "red")
abline(v=x,lty = 2, col = "red")
plot(x,y,ylim=c(0, 14))
abline(h=y,lty = 2, col = "red")
abline(v=x,lty = 2, col = "red")
help("legend")
par(opar)
par(lwd = 2, cex = 1.5,font.lab = 2)
plot(dose,drugA,drugB,type = "b",pch = 15,lty = c(1,2),col = c("red","blue"),ylim = c(1,10),main = "Drug A vs Drug B",xlab = "Drug Dosage",ylab = "Drug Response")
plot(dose,drugA,drugB,type = "b",pch = 15,lty = c(1,2),col = c("red","blue"),ylim = c(1,10),main = "Drug A vs Drug B",xlab = "Drug Dosage",ylab = "Drug Response")
plot(dose,drugA,drugB,type = "b",pch = 15,lty = c(1,2),col = c("red","blue"),ylim = c(1,10),xlim = c(1,10)main = "Drug A vs Drug B",xlab = "Drug Dosage",ylab = "Drug Response")
plot(dose,drugA,drugB,type = "b",pch = 15,lty = c(1,2),col = c("red","blue"),ylim = c(1,10),xlim = c(1,10),
main = "Drug A vs Drug B",xlab = "Drug Dosage",ylab = "Drug Response")
plot(dose,drugA,drugB,type = "b",pch = 15,lty = c(1,2),col = c("red","blue"),ylim = c(1,10),xlim = c(1,10),
main = "Drug A vs Drug B",xlab = "Drug Dosage",ylab = "Drug Response")
plot(dose,drugA,drugB,type = "b",pch = 15,lty = c(1,2),col = c("red","blue"),ylim = c(1,10),xlim = c(1,10),
main = "Drug A vs Drug B",xlab = "Drug Dosage",ylab = "Drug Response")
plot(dose,drugA,drugB,type = "b",pch = 15,lty = c(1,2),col = c("red","blue"),ylim = c(1,10),main = "Drug A vs Drug B",xlab = "Drug Dosage",ylab = "Drug Response")
plot(dose,drugA,drugB,type = "b",pch = 15,lty = c(1,2),col = c("red","blue"),ylim = c(1,10),xlim = c(15,60),main = "Drug A vs Drug B",xlab = "Drug Dosage",ylab = "Drug Response")
plot(dose,drugA,drugB)
plot(dose,drugA,type = "b",pch = 15,lty = c(1,2),col = c("red","blue"),ylim = c(1,10),xlim = c(15,60),main = "Drug A vs Drug B",xlab = "Drug Dosage",ylab = "Drug Response"))
plot(dose,drugA,type = "b",pch = 15,lty = c(1,2),col = c("red","blue"),ylim = c(1,10),xlim = c(15,60),main = "Drug A vs Drug B",xlab = "Drug Dosage",ylab = "Drug Response")
plot(dose,drugA,type = "b",pch = 15,lty = c(1,2),col = c("red","blue"),ylim = c(1,10),main = "Drug A vs Drug B",xlab = "Drug Dosage",ylab = "Drug Response")
plot(dose,drugA,type = "b",pch = 15,lty = 1 ,col = c="red",ylim = c(1,10),main = "Drug A vs Drug B",xlab = "Drug Dosage",ylab = "Drug Response")
plot(dose,drugA,type = "b",pch = 15,lty = 1 ,col ="red",ylim = c(1,10),main = "Drug A vs Drug B",xlab = "Drug Dosage",ylab = "Drug Response")
plot(dose,drugA,type = "b")
plot(dose,drugA,type = "b",pch = 15,lty = 1 ,col="red",ylim = c(1,10),main = "Drug A vs Drug B",xlab = "Drug Dosage",ylab = "Drug Response")
plot(dose,drugA,type = "b",pch = 15)
plot(dose,drugA,type = "b",pch = 15,lty = 1 ,col="red")
plot(dose,drugA,type = "b",pch = 15,lty = 1 ,col="red",,ylim = c(1,10))
plot(dose,drugA,type = "b",pch = 15,lty = 1 ,col="red",ylim = c(1,10))
plot(dose,drugA,type = "b",pch = 15,lty = 1 ,col="red",ylim = c(0,60))
plot(dose,drugA,type = "b",pch = 15,lty = 1 ,col="red",ylim = c(0,60),main = "Drug A vs Drug B",xlab = "Drug Dosage",ylab = "Drug Response")
abline(h=c(30),)
abline(h=c(30),lwd = 1.5,lty = 2,col = "gray")
par(opar)
par(lwd = 2, cex = 1.5,font.lab = 2)
plot(dose,drugA,type = "b",pch = 15,lty = 1 ,col="red",ylim = c(0,60),main = "Drug A vs Drug B",xlab = "Drug Dosage",ylab = "Drug Response")
abline(h=c(30),lwd = 1.5,lty = 2,col = "gray")
lines(dose,drugB,type = "b",pch = 17,lty = 2,col = "blue")
legend("topleft",inset = 0.05,title = "Drug Type",c("A","B"),lty = c(1,2),pch = c(15,17),col = c("red","blue")
legend("topleft",inset = 0.05,title = "Drug Type",c("A","B"),lty = c(1,2),pch = c(15,17),col = c("red","blue"))
library(Hmisc)
legend("topleft",inset = 0.05,title = "Drug Type",c("A","B"),lty = c(1,2),pch = c(15,17),col = c("red","blue"))
legend("topright",inset = 0.05,title = "Drug Type",c("A","B"),lty = c(1,2),pch = c(15,17),col = c("red","blue"))
legend("bottomright",inset = 0.05,title = "Drug Type",c("A","B"),lty = c(1,2),pch = c(15,17),col = c("red","blue"))
par(lwd = 2, cex = 1.5,font.lab = 2)
plot(dose,drugA,type = "b",pch = 15,lty = 1 ,col="red",ylim = c(0,60),main = "Drug A vs Drug B",xlab = "Drug Dosage",ylab = "Drug Response")
abline(h=c(30),lwd = 1.5,lty = 2,col = "gray")
lines(dose,drugB,type = "b",pch = 17,lty = 2,col = "blue")
library(Hmisc)
legend("bottomright",inset = 0.05,title = "Drug Type",c("A","B"),lty = c(1,2),pch = c(15,17),col = c("red","blue"))
par(opar)
legend("bottomright",title = "Drug Type",c("A","B"),lty = c(1,2),pch = c(15,17),col = c("red","blue"))
legend("bottomright",inset = 4,title = "Drug Type",c("A","B"),lty = c(1,2),pch = c(15,17),col = c("red","blue"))
legend("bottomright",inset = 0.75,title = "Drug Type",c("A","B"),lty = c(1,2),pch = c(15,17),col = c("red","blue"))
legend("bottomright",inset = 0.04,title = "Drug Type",c("A","B"),lty = c(1,2),pch = c(15,17),col = c("red","blue"))
legend("bottomright",inset = 0.05,title = "Drug Type",c("A","B"),lty = c(1,2),pch = c(15,17),col = c("red","blue"))
legend("bottomright",inset = 0.5,title = "Drug Type",c("A","B"),lty = c(1,2),pch = c(15,17),col = c("red","blue"))
par(opar)
par(lwd = 2, cex = 1.5,font.lab = 2)
plot(dose,drugA,type = "b",pch = 15,lty = 1 ,col="red",ylim = c(0,60),main = "Drug A vs Drug B",xlab = "Drug Dosage",ylab = "Drug Response")
abline(h=c(30),lwd = 1.5,lty = 2,col = "gray")
lines(dose,drugB,type = "b",pch = 17,lty = 2,col = "blue")
legend("topleft",inset =.05,title = "Drug Type",c("A","B"),lty = c(1,2),pch = c(15,17),col = c("red","blue"))
legend("topleft",inset =.06,title = "Drug Type",c("A","B"),lty = c(1,2),pch = c(15,17),col = c("red","blue"))
help("legend")
legend("topleft",inset =.05,title = "Drug Type",c("A","B"),lty = c(1,2),pch = c(15,17),col = c("red","blue"))
legend("topleft",title = "Drug Type",c("A","B"),lty = c(1,2),pch = c(15,17),col = c("red","blue"))
library(Hmisc)
legend("topleft",inset =.05,title = "Drug Type",c("A","B"),lty = c(1,2),pch = c(15,17),col = c("red","blue"))
legend("topleft",title = "Drug Type",c("A","B"),lty = c(1,2),pch = c(15,17),col = c("red","blue"))
plot(dose,drugA,type = "b",pch = 15,lty = 1 ,col="red",ylim = c(0,60),main = "Drug A vs Drug B",xlab = "Drug Dosage",ylab = "Drug Response")
abline(h=c(30),lwd = 1.5,lty = 2,col = "gray")
lines(dose,drugB,type = "b",pch = 17,lty = 2,col = "blue")
library(Hmisc)
legend("topleft",inset =.5,title = "Drug Type",c("A","B"),lty = c(1,2),pch = c(15,17),col = c("red","blue"))
legend("topleft",inset =.01,title = "Drug Type",c("A","B"),lty = c(1,2),pch = c(15,17),col = c("red","blue"))
plot(dose,drugA,type = "b",pch = 15,lty = 1 ,col="red",ylim = c(0,60),main = "Drug A vs Drug B",xlab = "Drug Dosage",ylab = "Drug Response")
abline(h=c(30),lwd = 1.5,lty = 2,col = "gray")
lines(dose,drugB,type = "b",pch = 17,lty = 2,col = "blue")
library(Hmisc)
legend("topleft",inset =.01,title = "Drug Type",c("A","B"),lty = c(1,2),pch = c(15,17),col = c("red","blue"))
plot(dose,drugA,type = "b",pch = 15,lty = 1 ,col="red",ylim = c(0,60),main = "Drug A vs Drug B",xlab = "Drug Dosage",ylab = "Drug Response")
abline(h=c(30),lwd = 1.5,lty = 2,col = "gray")
lines(dose,drugB,type = "b",pch = 17,lty = 2,col = "blue")
library(Hmisc)
legend("topleft",inset =.01,title = "Drug Type",c("A","B"))
legend("topleft",inset =.01,title = "Drug Type",c("A","B"),lty = c(1,2),pch = c(15,17),col = c("red","blue"))
attach(mtcars)
plot(wt,mpg)
text(wt,mpg,row.names(mtcars))
text(wt,mpg,row.names(mtcars),cex = 0.6)
attach(mtcars)
plot(wt,mpg)
text(wt,mpg,row.names(mtcars),cex = 0.6)
text(wt,mpg,row.names(mtcars),cex = 0.6,pos = 4 , col = "red")
plot(wt,mpg)
text(wt,mpg,row.names(mtcars),cex = 0.6,pos = 4 , col = "red")
help("plotmath")
attack(mtcars)
par(mfrows = c(2,2))
par(mfrow = c(2,2))
plot(wt,mpg)
plot(wt,disp)
hist(wt)
boxplot(wt)
par(opar)
detach(mtcars)
help("layout")
attach(mtcars)
opar<-par(no.readonly = TRUE)
layout(matrix(c(1,1,2,3),2,2,byrow = TRUE))
hist(wt)
hist(mpg)
hist(disp)
layout(matrix(c(1,2,3,3),2,2,byrow = TRUE))
hist(wt)
hist(mpg)
hist(disp)
layout(matrix(c(1,2,3,3),2,2,bycol= TRUE))
layout(matrix(c(1,2,3,3),2,2,byrow = FALSE))
hist(wt)
hist(mpg)
hist(disp)
