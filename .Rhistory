housing.df<-read.csv("C:\\Users\\ashwi\\Desktop\\R\\DMBA-R-datasets\\DMBA-R-datasets\\bostonhousing.csv")
housing.df<-read.csv("C:\\Users\\ashwi\\Desktop\\R\\DMBA-R-datasets\\DMBA-R-datasets\\bostonhousing.csv",header = TRUE)
head(housing.df)
## line chart for the Amtrak data
Amtrak.df <- read.csv("C:\\Users\\ashwi\\Desktop\\R\\DMBA-R-datasets\\DMBA-R-datasets\\Amtrak.csv")
## line chart for the Amtrak data
Amtrak.df <- read.csv("C:\\Users\\ashwi\\Desktop\\R\\DMBA-R-datasets\\DMBA-R-datasets\\Amtrak.csv",header = TRUE)
## line chart for the Amtrak data
Amtrak.df <- read.csv("C:\\Users\\ashwi\\Desktop\\R\\DMBA-R-datasets\\DMBA-R-datasets\\Amtrak-data.csv",header = TRUE)
# use time series analysis
library(forecast)
# use time series analysis
library(forecast)
install.packages("forecast")
# use time series analysis
library(forecast)
ridership.ts <- ts(Amtrak.df$Ridership, start = c(1991, 1), end = c(2004, 3), freq = 12)
plot(ridership.ts, xlab = "Year", ylab = "Ridership (in 000s)", ylim = c(1300, 2300))
## Boston housing data
housing.df <- read.csv("BostonHousing.csv")
## scatter plot with axes names
plot(housing.df$MEDV ~ housing.df$LSTAT, xlab = "MDEV", ylab = "LSTAT")
# alternative plot with ggplot
library(ggplot2)
ggplot(housing.df) + geom_point(aes(x = LSTAT, y = MEDV), colour = "navy", alpha = 0.7)
## barchart of CHAS vs. mean MEDV
# compute mean MEDV per CHAS = (0, 1)
data.for.plot <- aggregate(housing.df$MEDV, by = list(housing.df$CHAS), FUN = mean)
names(data.for.plot) <- c("CHAS", "MeanMEDV")
barplot(data.for.plot$MeanMEDV, names.arg = data.for.plot$CHAS,
xlab = "CHAS", ylab = "Avg. MEDV")
# alternative plot with ggplot
ggplot(data.for.plot) + geom_bar(aes(x = CHAS, y = MeanMEDV), stat = "identity")
## barchart of CHAS vs. % CAT.MEDV
data.for.plot <- aggregate(housing.df$CAT..MEDV, by = list(housing.df$CHAS), FUN = mean)
names(data.for.plot) <- c("CHAS", "MeanCATMEDV")
barplot(data.for.plot$MeanCATMEDV * 100, names.arg = data.for.plot$CHAS,
xlab = "CHAS", ylab = "% of CAT.MEDV")
dfw<-read.csv("C:\Users\ashwi\Desktop\Ashwin\PS_DS\psds_data\airline_delay_causes")
dfw<-read.csv("C:\\Users\\ashwi\\Desktop\\Ashwin\\PS_DS\\psds_data\\airline_delay_causes")
dfw<-read.csv("C:\\Users\\ashwi\\Desktop\\Ashwin\\PS_DS\\psds_data\\airline_delay_causes")
dfw<-read.csv("C:\\Users\\ashwi\\Desktop\\Ashwin\\PS_DS\\psds_data\\airline_delay_causes.csv")
barplot(as.matrix(dfw)/6,cex.axis=0.5)
barplot(as.matrix(dfw)/6, cex.axis=.5)
sp500_px <- read.csv('C:\\Users\\ashwi\\Desktop\\Ashwin\\PS_DS\\psds_data\\sp500_px.csv')
sp500_sym <- read.csv('C:\\Users\\ashwi\\Desktop\\Ashwin\\PS_DS\\psds_data\\sp500_sym.csv', stringsAsFactors = FALSE)
read.csv("C:\\Users\\ashwi\\Desktop\\Ashwin\\PS_DS\\psds_data\\k_tax.csv")
read.csv("C:\\Users\\ashwi\\Desktop\\Ashwin\\PS_DS\\psds_data\\kc_tax.csv")
kc_tax<-read.csv("C:\\Users\\ashwi\\Desktop\\Ashwin\\PS_DS\\psds_data\\kc_tax.csv")
kc_tax0<-subset(kc_tax,TaxAssessedValue < 750000 & SqFtTotLiving>100 & SqFtTotLiving<3500)
length(kc_tax0)
kc_tax0
nrow(kc_tax0)
ncol(kc_tax0)
ncol(kc_tax0)
a<-kc_tax(TaxAssessedValue < 750000 & SqFtTotLiving>100 & SqFtTotLiving<3500)
a<-kc_tax(kc_tax$TaxAssessedValue < 750000 & kc_tax$SqFtTotLiving>100 & kc_tax$SqFtTotLiving<3500)
a<-kc_tax(kc_tax$TaxAssessedValue < "750000" & kc_tax$SqFtTotLiving>"100" & kc_tax$SqFtTotLiving<"3500")
a<-kc_tax[kc_tax$TaxAssessedValue < "750000" & kc_tax$SqFtTotLiving>"100" & kc_tax$SqFtTotLiving<"3500"]
a<-Kc_tax[kc_tax$TaxAssessedValue < "750000" & kc_tax$SqFtTotLiving>"100" & kc_tax$SqFtTotLiving<"3500"]
a<-kc_tax[kc_tax$TaxAssessedValue < "750000" & kc_tax$SqFtTotLiving>"100" & kc_tax$SqFtTotLiving<"3500"]
a<- kc_tax [kc_tax$TaxAssessedValue < "750000" & kc_tax$SqFtTotLiving>"100" & kc_tax$SqFtTotLiving<"3500"]
ncol(kc_tax0)
library(ggplot2)
ggplot(kc_tax0, (aes(x=SqFtTotLiving, y=TaxAssessedValue))) + stat_binhex(colour="white") + theme_bw() + scale_fill_gradient(low="white", high="black") + labs(x="Finished Square Feet", y="Tax Assessed Value")
install.packages("hexbin")
ggplot(kc_tax0, (aes(x=SqFtTotLiving, y=TaxAssessedValue))) + stat_binhex(colour="white") + theme_bw() + scale_fill_gradient(low="white", high="black") + labs(x="Finished Square Feet", y="Tax Assessed Value")
ggplot(kc_tax0, (aes(x=SqFtTotLiving, y=TaxAssessedValue)))
ggplot(kc_tax0, (aes(x=SqFtTotLiving, y=TaxAssessedValue))) +  stat_binhex(colour="white") + theme_bw() + scale_fill_gradient(low="white", high="black") + labs(x="Finished Square Feet", y="Tax Assessed Value")
ggplot(kc_tax0, (aes(x=SqFtTotLiving, y=TaxAssessedValue))) +  stat_binhex(colour="white")
ggplot(kc_tax0, (aes(x=SqFtTotLiving, y=TaxAssessedValue)))
stat_binhex(colour="white")
ggplot(kc_tax0, (aes(x=SqFtTotLiving, y=TaxAssessedValue))) +  stat_binhex(colour="white")
ggplot(kc_tax0, (aes(x=SqFtTotLiving, y=TaxAssessedValue))) +  stat_binhex(colour="white") + theme_bw()
ggplot(kc_tax0, (aes(x=SqFtTotLiving, y=TaxAssessedValue))) +  stat_binhex(colour="white")
ggplot(kc_tax0, (aes(x=SqFtTotLiving, y=TaxAssessedValue))) +  stat_binhex(colour="white")  + scale_fill_gradient(low="white", high="black")
ggplot(kc_tax0, (aes(x=SqFtTotLiving, y=TaxAssessedValue))) +  stat_binhex(colour="white")  +theme_bw()+ scale_fill_gradient(low="white", high="black")
ggplot(kc_tax0, (aes(x=SqFtTotLiving, y=TaxAssessedValue))) +  stat_binhex(colour="white")  +theme_bw()+ scale_fill_gradient(low="white", high="red")
x <- rnorm(20000)
y <- rnorm(20000)
hbin <- hexbin(x,y, xbins = 40)
plot(hbin)
x <- kc_tax0$SqFtTotLiving
y <- kc_tax0$TaxAssessedValue
hbin <- hexbin(x,y, xbins = 40)
plot(hbin)
ggplot(kc_tax0, aes(SqFtTotLiving, TaxAssessedValue)) +
theme_bw() +
geom_point( alpha=0.1) +
geom_density2d(colour="white") +
labs(x="Finished Square Feet", y="Tax Assessed Value")
ggplot(kc_tax0, aes(SqFtTotLiving, TaxAssessedValue)) + theme_bw() + geom_point( alpha=0.1) + geom_density2d(colour="white") + labs(x="Finished Square Feet", y="Tax Assessed Value")
ggplot(kc_tax0, aes(SqFtTotLiving, TaxAssessedValue)) + theme_bw() + geom_point( alpha=0.1) + geom_density2d(colour="white") + labs(x="Finished Square Feet", y="Tax Assessed Value")
ctor<- contour(x,y)
ctor<- contour(x,y,alpha=0.1)
ggplot(kc_tax0, aes(SqFtTotLiving, TaxAssessedValue)) +
theme_bw() +
geom_point( alpha=0.1) +
geom_density2d(colour="white") +
labs(x="Finished Square Feet", y="Tax Assessed Value")
boxplot(pct_delay ~ airline, data=airline_stats, ylim=c(0, 50))
boxplot(pct_delay ~ airline, data=airline_stats, ylim=c(0, 50))
airline<-read.csv("C:\\Users\\ashwi\\Desktop\\Ashwin\\PS_DS\\psds_data\\airline_stats.csv")
boxplot(pct_delay ~ airline, data=airline_stats, ylim=c(0, 50))
boxplot(pct_delay = airline, data=airline_stats, ylim=c(0, 50))
boxplot(data=airline_stats, ylim=c(0, 50))
boxplot(data=airline_stats.csv, ylim=c(0, 50))
ggplot(kc_tax0,zipcode %in% c((98188, 98105, 98108, 98126)),aes(x=SqFtTotLiving, y=TaxAssessedValue))+stat_bin_hex(color ='white') +theme_bw()+scale_fill_gradient(low = "white",high = "red")
ggplot(kc_tax0,zipcode %in% c((98188,98105,98108,98126)),aes(x=SqFtTotLiving, y=TaxAssessedValue))+stat_bin_hex(color ='white') +theme_bw()+scale_fill_gradient(low = "white",high = "red")
ggplot(subset(kc_tax0, ZipCode %in% c(98188, 98105, 98108, 98126)),
aes(x=SqFtTotLiving, y=TaxAssessedValue)) +
stat_binhex(colour="white") +
theme_bw() +
scale_fill_gradient( low="white", high="blue") +
labs(x="Finished Square Feet", y="Tax Assessed Value") +
facet_wrap("ZipCode")
ggplot2(subset(kc_tax0, ZipCode %in% c(98188, 98105, 98108, 98126)),aes(x=SqFtTotLiving, y=TaxAssessedValue)) +stat_binhex(colour="white") +theme_bw() +scale_fill_gradient( low="white", high="blue") +facet_wrap("ZipCode")
library(ggplot)
library(ggplot2)
ggplot(subset(kc_tax0, ZipCode %in% c(98188, 98105, 98108, 98126)),aes(x=SqFtTotLiving, y=TaxAssessedValue)) +stat_binhex(colour="white") +theme_bw() +scale_fill_gradient( low="white", high="blue") +facet_wrap("ZipCode")
ggplot(kc_tax0,zipcode %in% c((98188,98105,98108,98126)),aes(x=SqFtTotLiving, y=TaxAssessedValue))+stat_bin_hex(color ='white') +theme_bw()+scale_fill_gradient(low = "white",high = "red")
ggplot(subset(kc_tax0,zipcode %in% c((98188,98105,98108,98126)),aes(x=SqFtTotLiving, y=TaxAssessedValue))+stat_bin_hex(color ='white') +theme_bw()+scale_fill_gradient(low = "white",high = "red")
library(ggplot2)
ggplot(subset(kc_tax0,zipcode %in% c((98188,98105,98108,98126)),aes(x=SqFtTotLiving, y=TaxAssessedValue))+stat_bin_hex(color ='white') +theme_bw()+scale_fill_gradient(low = "white",high = "red")
ggplot(subset(kc_tax0,zipcode %in% c((98188,98105,98108,98126)),aes(x=SqFtTotLiving, y=TaxAssessedValue))+stat_bin_hex(color ='white') +theme_bw()+scale_fill_gradient(low = "white",high = "red")
ggplot(subset(kc_tax0,ZipCode %in% c(98188, 98105, 98108, 98126)),aes(x=SqFtTotLiving, y=TaxAssessedValue)) +stat_binhex(colour="white") +theme_bw() +scale_fill_gradient( low="white", high="blue") +facet_wrap("ZipCode")
ggplot(subset(kc_tax0,zipcode %in% c(98188,98105,98108,98126)),aes(x=SqFtTotLiving, y=TaxAssessedValue))+stat_bin_hex(color ='white') +theme_bw()+scale_fill_gradient(low = "white",high = "red")
ggplot(subset(kc_tax0,zipcode %in% c(98188,98105,98108,98126)),aes(x=SqFtTotLiving, y=TaxAssessedValue))+stat_bin_hex(color ='white') +theme_bw()+scale_fill_gradient(low = "white",high = "red") + facet_wrap("ZipCode")
98188, 98105, 98108, 98126)),aes(x=SqFtTotLiving, y=TaxAssessedValue)) +stat_binhex(colour="white") +theme_bw() +scale_fill_gradient( low="white", high="blue") +facet_wrap("ZipCode")
library(ggplot2)
ggplot(subset(kc_tax0,ZipCode %in% c(98188, 98105, 98108, 98126)),aes(x=SqFtTotLiving, y=TaxAssessedValue)) +stat_binhex(colour="white") +theme_bw() +scale_fill_gradient( low="white", high="blue") +facet_wrap("ZipCode")
install.packages('IRkernel')
IRkernel::installspec()
IRkernel::installspec()
devtools::install_github('IRkernel/IRkernel')
IRkernel::installspec(user = FALSE)
install.packages(c('repr','IRdisplay','crayon','pbdZMQ','devtools'))
install.packages(c("repr", "IRdisplay", "crayon", "pbdZMQ", "devtools"))
install.packages(c("repr", "IRdisplay", "crayon", "pbdZMQ", "devtools"))
devtools::install_github('IRkernel/IRkernel')
IRkernel::installspec()
IRkernel::installspec()
install.packages('IRkernel')
install.packages("IRkernel")
IRkernel::installspec()
IRkernel::installspec(name = 'ir33', displayname = 'R 3.3')
IRkernel::installspec(name = 'ir32', displayname = 'R 3.2')
IRkernel::installspec()
IRkernel::installspec(user=FALSE)
conda install -c r r-irkernel
library(readr)
Vertebral_Column_Data <- read_csv("C:/Users/ashwi/Desktop/Ashwin/Making_sense_of_data/IE7275 working/Vertebral Column Data.csv")
View(Vertebral_Column_Data)
v <- Vertebral_Column_Data
fa.parallel(v,fa="pc",n.iter = 100,show.legend = FALSE,main = "scree plot")
v <- Vertebral_Column_Data
library(psych)
fa.parallel(v,fa="pc",n.iter = 100,show.legend = FALSE,main = "scree plot")
fa.parallel(v[,],fa="pc",n.iter = 100,show.legend = FALSE,main = "scree plot")
fa.parallel(v[,-1],fa="pc",n.iter = 100,show.legend = FALSE,main = "scree plot")
v <- Vertebral_Column_Data
library(psych)
fa.parallel(v[,-1],fa="pc",n.iter = 100,show.legend = FALSE,main = "scree plot")
fa.parallel(v[1,4],fa="pc",n.iter = 100,show.legend = FALSE,main = "scree plot")
fa.parallel(v[1,5],fa="pc",n.iter = 100,show.legend = FALSE,main = "scree plot")
v <- Vertebral_Column_Data
View(v)
fa.parallel(v[,6],fa="pc",n.iter = 100,show.legend = FALSE,main = "scree plot")
fa.parallel(v[,-1],fa="pc",n.iter = 100,show.legend = FALSE,main = "scree plot")
fa.parallel(v[,-2],fa="pc",n.iter = 100,show.legend = FALSE,main = "scree plot")
fa.parallel(v[,-5],fa="pc",n.iter = 100,show.legend = FALSE,main = "scree plot")
fa.parallel(v[,-6],fa="pc",n.iter = 100,show.legend = FALSE,main = "scree plot")
fa.parallel(v[,-67,fa="pc",n.iter = 100,show.legend = FALSE,main = "scree plot")
fa.parallel(v[,-7,fa="pc",n.iter = 100,show.legend = FALSE,main = "scree plot")
fa.parallel(v[,-7],fa="pc",n.iter = 100,show.legend = FALSE,main = "scree plot")
v[,1]
v[,-1]
v[,-2]
v[,-7]
cmdscale(v)
cmdscale(v[,-7])
cmdscale(v)
cmdscale(v[,-])
cmdscale(v[,-7])
cmdscale(v[,-7], k = 2, eig = FALSE, add = FALSE, x.ret = FALSE,
list. = eig || add || x.ret)
cmdscale(v[,-7], k = 2, eig = FALSE, add = FALSE, x.ret = FALSE)
cmdscale(v[,-7])
pc<-principal(v[,-7],nfactors = 1)
cmdscale(pc)
pc
cmdscale(pc[,-1])
cmdscale(pc)
rc<-principal(r=v[,-7],nfactors = 2,rotate = "varimax")
rc
cmdscale(pc)
cmdscale(rc)
cmdscale(pc)
age <- c(1,3,5,2,11,9,3,9,12,3)
weight <- c(4.4,5.3,7.2,5.2,8.5,7.3,6.0,10.4,10.2,6.1)
mean(weight)
sd(weight)
cor(age,weight)
plot(age,weight)
q()
demo()
demo(Hershey)
age <- c(1,3,5,2,11,9,3,9,12,3)
weight <- c(4.4,5.3,7.2,5.2,8.5,7.3,6.0,10.4,10.2,6.1)
mean(weight)
sd(weight)
cor(age,weight)
plot(age,weight)
getwd()
setwd("C:\Users\ashwi\Desktop\Ashwin\Data_mining_Concepts")
setwd("C:/Users/ashwi/Desktop/Ashwin/Data_mining_Concepts")
getwd()
ls()
options()
history(2)
library()
.libPaths()
search()
install.packages()
install.packages("gclus")
help(package = "gclus")
help.start()
install.packages("vcd")
help(package = "vcd")
Arthriti
Arthritis
help(Arthritis)
help(Arthritis)
data(Arthritis)
data("Arthritis")
data("Arthritis")
a <- data("Arthritis")
a
library(vcd)
data("Arthritis")
Arthritis
help(Arthritis)
example(Arthritis)
a<-c(1,2,3,4,5,6,7,8,9)
b <- c("a","b","c",'"d","e")
b <- c("a","b","c","d","e")
b <- c("a","b","c","d","e")
a[3]
a[c(1,2,3,)]
a[c(1,2,3)]
a[1:6]
mymatrix<- matrix(a,nrow = 3,ncol = 3,byrow = TRUE,dimnames = list("r1","r2","r3","c1","c2","c3"))
a[1:6]
mymatrix<- matrix(a,nrow = 3,ncol = 3,byrow = TRUE,dimnames = list("r1","r2","r3","c1","c2","c3"))
mymatrix<- matrix(a,nrow = 3,ncol = 3,byrow = TRUE,dimnames = list(("r1","r2","r3"),("c1","c2","c3"))
rnames<-c("r1","r2","r3")
cnames<-c("c1","c2","c3")
mymatrix<- matrix(a,nrow = 3,ncol = 3,byrow = TRUE,dimnames = list(rnames,cnames)
mymatrix<- matrix(a,nrow = 3,ncol = 3,byrow = TRUE,dimnames = list(rnames,cnames))
mymatrix<- matrix(a,nrow = 3,ncol = 3,byrow = TRUE,dimnames = list(c("r1","r2","r3"),c("c1","c2","c3")))
mymatrix
mymatrix[,1]
mymatrix[1,]
mymatrix[2,2]
mymatrix[1:2,2]
mymatrix[1,c(1:2)]
myarray<-(1:24,c(2,3,4),dimnames(c("a1","a2"),c("b1","b2","b3"),c("c1","c2","c3","c4")))
myarray<-(1:24,c(2,3,4),dimnames(c("a1","a2"),c("b1","b2","b3"),c("c1","c2","c3","c4"))
myarray<-(1:24 c(2,3,4),dimnames(c("a1","a2"),c("b1","b2","b3"),c("c1","c2","c3","c4"))
myarray<-array(1:24,c(2,3,4),dimnames(c("a1","a2"),c("b1","b2","b3"),c("c1","c2","c3","c4")))
myarray<-array(1:24,c(2,3,4),dimnames(list(c("a1","a2"),c("b1","b2","b3"),c("c1","c2","c3","c4"))))
myarray
myarray[1,1,1]
myarray[c(1,2)]
c<-c(9:18)
b <- c("a","b","c","d","e","f","g","h","i")
c<-c(10:19)
mydata<-data.frame(a,b,c)
c<-c(10:18)
mydata<-data.frame(a,b,c)
mydata
table(mydata$a,mydata$b)
b <- c("a","c","c","d","e","f","g","h","i")
table(mydata$a,mydata$b)
myarray<-array(1:24,c(2,3,4),dimnames(list(c("a1","a2"),c("b1","b2","b3"),c("c1","c2","c3","c4"))))
mydata<-data.frame(a,b,c)
table(mydata$a,mydata$b)
mtcars
patientID<-c(1,2,3,4)
age<-c(25,34,28,52)
diabetes<-c("type1","type2","type1","type1")
status<-c("poor","improved","excellent","poor")
diabetes<-factor(diabetes)
status<-factor(status,order = TRUE)
patientdata<-data.frame(patientID,age,diabetes,status)
patientdata
str(patientdata)
new_data<-data.frame(a)
new_data<=edit(mydata)
new_data<-data.frame(a,b,c)
new_data<=edit(mydata)
fix(new_data)
head(a,5)
head(a,-5)
head(a,-8)
head(a)
tail(a)
tail(a,5)
tail(a,-1)
head(a,-1)
ls()
class(new_data)
class(a)
mode)a
mode(a)
mode(new_data()
mode(new_data)
mode(new_data)
class(new_data)
name(new_data)
names(new_data)
names(new_data)[2]
names(new_data)[2] <- "renaning b""
names(new_data)[2] <- "renaning b"
names(new_data)[2] <- "renaning b"
new_data
