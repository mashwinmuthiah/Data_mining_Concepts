ncol(kc_tax0)
library(ggplot2)
ggplot(kc_tax0, (aes(x=SqFtTotLiving, y=TaxAssessedValue))) + stat_binhex(colour="white") + theme_bw() + scale_fill_gradient(low="white", high="black") + labs(x="Finished Square Feet", y="Tax Assessed Value")
install.packages("hexbin")
ggplot(kc_tax0, (aes(x=SqFtTotLiving, y=TaxAssessedValue))) + stat_binhex(colour="white") + theme_bw() + scale_fill_gradient(low="white", high="black") + labs(x="Finished Square Feet", y="Tax Assessed Value")
ggplot(kc_tax0, (aes(x=SqFtTotLiving, y=TaxAssessedValue)))
ggplot(kc_tax0, (aes(x=SqFtTotLiving, y=TaxAssessedValue))) +  stat_binhex(colour="white") + theme_bw() + scale_fill_gradient(low="white", high="black") + labs(x="Finished Square Feet", y="Tax Assessed Value")
ggplot(kc_tax0, (aes(x=SqFtTotLiving, y=TaxAssessedValue))) +  stat_binhex(colour="white")
ggplot(kc_tax0, (aes(x=SqFtTotLiving, y=TaxAssessedValue)))
stat_binhex(colour="white")
ggplot(kc_tax0, (aes(x=SqFtTotLiving, y=TaxAssessedValue))) +  stat_binhex(colour="white")
ggplot(kc_tax0, (aes(x=SqFtTotLiving, y=TaxAssessedValue))) +  stat_binhex(colour="white") + theme_bw()
ggplot(kc_tax0, (aes(x=SqFtTotLiving, y=TaxAssessedValue))) +  stat_binhex(colour="white")
ggplot(kc_tax0, (aes(x=SqFtTotLiving, y=TaxAssessedValue))) +  stat_binhex(colour="white")  + scale_fill_gradient(low="white", high="black")
ggplot(kc_tax0, (aes(x=SqFtTotLiving, y=TaxAssessedValue))) +  stat_binhex(colour="white")  +theme_bw()+ scale_fill_gradient(low="white", high="black")
ggplot(kc_tax0, (aes(x=SqFtTotLiving, y=TaxAssessedValue))) +  stat_binhex(colour="white")  +theme_bw()+ scale_fill_gradient(low="white", high="red")
x <- rnorm(20000)
y <- rnorm(20000)
hbin <- hexbin(x,y, xbins = 40)
plot(hbin)
x <- kc_tax0$SqFtTotLiving
y <- kc_tax0$TaxAssessedValue
hbin <- hexbin(x,y, xbins = 40)
plot(hbin)
ggplot(kc_tax0, aes(SqFtTotLiving, TaxAssessedValue)) +
theme_bw() +
geom_point( alpha=0.1) +
geom_density2d(colour="white") +
labs(x="Finished Square Feet", y="Tax Assessed Value")
ggplot(kc_tax0, aes(SqFtTotLiving, TaxAssessedValue)) + theme_bw() + geom_point( alpha=0.1) + geom_density2d(colour="white") + labs(x="Finished Square Feet", y="Tax Assessed Value")
ggplot(kc_tax0, aes(SqFtTotLiving, TaxAssessedValue)) + theme_bw() + geom_point( alpha=0.1) + geom_density2d(colour="white") + labs(x="Finished Square Feet", y="Tax Assessed Value")
ctor<- contour(x,y)
ctor<- contour(x,y,alpha=0.1)
ggplot(kc_tax0, aes(SqFtTotLiving, TaxAssessedValue)) +
theme_bw() +
geom_point( alpha=0.1) +
geom_density2d(colour="white") +
labs(x="Finished Square Feet", y="Tax Assessed Value")
boxplot(pct_delay ~ airline, data=airline_stats, ylim=c(0, 50))
boxplot(pct_delay ~ airline, data=airline_stats, ylim=c(0, 50))
airline<-read.csv("C:\\Users\\ashwi\\Desktop\\Ashwin\\PS_DS\\psds_data\\airline_stats.csv")
boxplot(pct_delay ~ airline, data=airline_stats, ylim=c(0, 50))
boxplot(pct_delay = airline, data=airline_stats, ylim=c(0, 50))
boxplot(data=airline_stats, ylim=c(0, 50))
boxplot(data=airline_stats.csv, ylim=c(0, 50))
ggplot(kc_tax0,zipcode %in% c((98188, 98105, 98108, 98126)),aes(x=SqFtTotLiving, y=TaxAssessedValue))+stat_bin_hex(color ='white') +theme_bw()+scale_fill_gradient(low = "white",high = "red")
ggplot(kc_tax0,zipcode %in% c((98188,98105,98108,98126)),aes(x=SqFtTotLiving, y=TaxAssessedValue))+stat_bin_hex(color ='white') +theme_bw()+scale_fill_gradient(low = "white",high = "red")
ggplot(subset(kc_tax0, ZipCode %in% c(98188, 98105, 98108, 98126)),
aes(x=SqFtTotLiving, y=TaxAssessedValue)) +
stat_binhex(colour="white") +
theme_bw() +
scale_fill_gradient( low="white", high="blue") +
labs(x="Finished Square Feet", y="Tax Assessed Value") +
facet_wrap("ZipCode")
ggplot2(subset(kc_tax0, ZipCode %in% c(98188, 98105, 98108, 98126)),aes(x=SqFtTotLiving, y=TaxAssessedValue)) +stat_binhex(colour="white") +theme_bw() +scale_fill_gradient( low="white", high="blue") +facet_wrap("ZipCode")
library(ggplot)
library(ggplot2)
ggplot(subset(kc_tax0, ZipCode %in% c(98188, 98105, 98108, 98126)),aes(x=SqFtTotLiving, y=TaxAssessedValue)) +stat_binhex(colour="white") +theme_bw() +scale_fill_gradient( low="white", high="blue") +facet_wrap("ZipCode")
ggplot(kc_tax0,zipcode %in% c((98188,98105,98108,98126)),aes(x=SqFtTotLiving, y=TaxAssessedValue))+stat_bin_hex(color ='white') +theme_bw()+scale_fill_gradient(low = "white",high = "red")
ggplot(subset(kc_tax0,zipcode %in% c((98188,98105,98108,98126)),aes(x=SqFtTotLiving, y=TaxAssessedValue))+stat_bin_hex(color ='white') +theme_bw()+scale_fill_gradient(low = "white",high = "red")
library(ggplot2)
ggplot(subset(kc_tax0,zipcode %in% c((98188,98105,98108,98126)),aes(x=SqFtTotLiving, y=TaxAssessedValue))+stat_bin_hex(color ='white') +theme_bw()+scale_fill_gradient(low = "white",high = "red")
ggplot(subset(kc_tax0,zipcode %in% c((98188,98105,98108,98126)),aes(x=SqFtTotLiving, y=TaxAssessedValue))+stat_bin_hex(color ='white') +theme_bw()+scale_fill_gradient(low = "white",high = "red")
ggplot(subset(kc_tax0,ZipCode %in% c(98188, 98105, 98108, 98126)),aes(x=SqFtTotLiving, y=TaxAssessedValue)) +stat_binhex(colour="white") +theme_bw() +scale_fill_gradient( low="white", high="blue") +facet_wrap("ZipCode")
ggplot(subset(kc_tax0,zipcode %in% c(98188,98105,98108,98126)),aes(x=SqFtTotLiving, y=TaxAssessedValue))+stat_bin_hex(color ='white') +theme_bw()+scale_fill_gradient(low = "white",high = "red")
ggplot(subset(kc_tax0,zipcode %in% c(98188,98105,98108,98126)),aes(x=SqFtTotLiving, y=TaxAssessedValue))+stat_bin_hex(color ='white') +theme_bw()+scale_fill_gradient(low = "white",high = "red") + facet_wrap("ZipCode")
98188, 98105, 98108, 98126)),aes(x=SqFtTotLiving, y=TaxAssessedValue)) +stat_binhex(colour="white") +theme_bw() +scale_fill_gradient( low="white", high="blue") +facet_wrap("ZipCode")
library(ggplot2)
ggplot(subset(kc_tax0,ZipCode %in% c(98188, 98105, 98108, 98126)),aes(x=SqFtTotLiving, y=TaxAssessedValue)) +stat_binhex(colour="white") +theme_bw() +scale_fill_gradient( low="white", high="blue") +facet_wrap("ZipCode")
install.packages('IRkernel')
IRkernel::installspec()
IRkernel::installspec()
devtools::install_github('IRkernel/IRkernel')
IRkernel::installspec(user = FALSE)
install.packages(c('repr','IRdisplay','crayon','pbdZMQ','devtools'))
install.packages(c("repr", "IRdisplay", "crayon", "pbdZMQ", "devtools"))
install.packages(c("repr", "IRdisplay", "crayon", "pbdZMQ", "devtools"))
devtools::install_github('IRkernel/IRkernel')
IRkernel::installspec()
IRkernel::installspec()
install.packages('IRkernel')
install.packages("IRkernel")
IRkernel::installspec()
IRkernel::installspec(name = 'ir33', displayname = 'R 3.3')
IRkernel::installspec(name = 'ir32', displayname = 'R 3.2')
IRkernel::installspec()
IRkernel::installspec(user=FALSE)
conda install -c r r-irkernel
library(readr)
Vertebral_Column_Data <- read_csv("C:/Users/ashwi/Desktop/Ashwin/Making_sense_of_data/IE7275 working/Vertebral Column Data.csv")
View(Vertebral_Column_Data)
v <- Vertebral_Column_Data
fa.parallel(v,fa="pc",n.iter = 100,show.legend = FALSE,main = "scree plot")
v <- Vertebral_Column_Data
library(psych)
fa.parallel(v,fa="pc",n.iter = 100,show.legend = FALSE,main = "scree plot")
fa.parallel(v[,],fa="pc",n.iter = 100,show.legend = FALSE,main = "scree plot")
fa.parallel(v[,-1],fa="pc",n.iter = 100,show.legend = FALSE,main = "scree plot")
v <- Vertebral_Column_Data
library(psych)
fa.parallel(v[,-1],fa="pc",n.iter = 100,show.legend = FALSE,main = "scree plot")
fa.parallel(v[1,4],fa="pc",n.iter = 100,show.legend = FALSE,main = "scree plot")
fa.parallel(v[1,5],fa="pc",n.iter = 100,show.legend = FALSE,main = "scree plot")
v <- Vertebral_Column_Data
View(v)
fa.parallel(v[,6],fa="pc",n.iter = 100,show.legend = FALSE,main = "scree plot")
fa.parallel(v[,-1],fa="pc",n.iter = 100,show.legend = FALSE,main = "scree plot")
fa.parallel(v[,-2],fa="pc",n.iter = 100,show.legend = FALSE,main = "scree plot")
fa.parallel(v[,-5],fa="pc",n.iter = 100,show.legend = FALSE,main = "scree plot")
fa.parallel(v[,-6],fa="pc",n.iter = 100,show.legend = FALSE,main = "scree plot")
fa.parallel(v[,-67,fa="pc",n.iter = 100,show.legend = FALSE,main = "scree plot")
fa.parallel(v[,-7,fa="pc",n.iter = 100,show.legend = FALSE,main = "scree plot")
fa.parallel(v[,-7],fa="pc",n.iter = 100,show.legend = FALSE,main = "scree plot")
v[,1]
v[,-1]
v[,-2]
v[,-7]
cmdscale(v)
cmdscale(v[,-7])
cmdscale(v)
cmdscale(v[,-])
cmdscale(v[,-7])
cmdscale(v[,-7], k = 2, eig = FALSE, add = FALSE, x.ret = FALSE,
list. = eig || add || x.ret)
cmdscale(v[,-7], k = 2, eig = FALSE, add = FALSE, x.ret = FALSE)
cmdscale(v[,-7])
pc<-principal(v[,-7],nfactors = 1)
cmdscale(pc)
pc
cmdscale(pc[,-1])
cmdscale(pc)
rc<-principal(r=v[,-7],nfactors = 2,rotate = "varimax")
rc
cmdscale(pc)
cmdscale(rc)
cmdscale(pc)
setwd("C:\\Users\\ashwi\\Desktop\\Ashwin\\Data_mining_Concepts")
currentdr
mydata<-data.frame(x1 = c(2, 2, 6, 4),x2 = c(3, 4, 2, 8))
mtdata$sum<-mydata$x1+mydata$x2
mydata$sum<-mydata$x1+mydata$x2
mydata
mydata<-transform(mydata,sum=x1+x2,mean=(x1+x2)/2)
mydata
manager<-c(1,2,3,4,5)
data<-c("10/24/08", "10/28/08", "10/1/08", "10/12/08", "5/1/09")
country<-c("US","US","UK","UK","UK")
gender<-c("M","F","F","M","F")
age<-c(32,45,25,39,99)
q1<-c(5,3,3,3,2)
q2<-c(4,5,5,3,2)
q3<-c(5,2,5,4,1)
q4<-c(5,5,5,NA,2)
q5<-5,5,2,Na,1)
q5<-c(5,5,2,Na,1)
date<-c("10/24/08", "10/28/08", "10/1/08", "10/12/08", "5/1/09")
leadership<-data.frame(manager,date,country,gender,age,q1,q2,q3,q4,q5)
q5<-c(5,5,2,Na,1)
q5<-c(5,5,2,NA,1)
leadership<-data.frame(manager,date,country,gender,age,q1,q2,q3,q4,q5)
leadership
leadership<-data.frame(manager,date,country,gender,age,q1,q2,q3,q4,q5,stringsAsFactors = FALSE)
leadership
leadership[leadership$age == 99] <-NA
leadership
leadership<-data.frame(manager,date,country,gender,age,q1,q2,q3,q4,q5,stringsAsFactors = FALSE)
leadership
leadership[leadership$age == 99] <-NA
leadership
leadership[leadership$age =99] <-NA
leadership
leadership<-data.frame(manager,date,country,gender,age,q1,q2,q3,q4,q5,stringsAsFactors = FALSE)
leadership
leadership$age[leadership$age == 99] <-NA
leadership
leadership$age[leadership$age == 99] <-NA
leadership$agecat[leadership$age>75]<="Elder"
leadership$agecat[leadership$age>75]<-"Elder"
leadership%agecat[leadership$age>=55 & leadership$age<=75]<-"Middle Age"
leadership$agecat[leadership$age>=55 & leadership$age<=75]<-"Middle Age"
leadership$agecat[leadership$age <55] <-"Young"
View(leadership)
View(leadership)
library(car)
?recode()
library(doBy)
?cut()
Z <- stats::rnorm(10000)
table(cut(Z, breaks = -6:6))
z
Z
table(cut(Z, breaks = -6:6))
Z <- stats::rnorm(10)
Z
table(cut(Z, breaks = -6:6))
table(cut(Z, breaks = -1:1))
Z <- stats::rnorm(10)
Z
table(cut(Z, breaks = -1:1))
Z <- stats::rnorm(10)
Z
table(cut(Z, breaks = -1:1))
?recode()
()
()
x<-rep(1:3,3)
x
recode(x,"c(1,2)='A';else='B")
recode(x,"c(1,2)='A';else='B'")
x<-rep(1:5,3)
x
recode(x,"c(1,2)='A';else='B'")
recode(x,"c(1,3,5)='A';else='B'")
x
y<-recode(x,"c(1,3,5)='A';else='B'")
y
leadership$agecat<-recode(leadership$age,"c(75:100)='Elder';c(55:74)='Middle age';else='Young'")
leadership$agecat<-recode(leadership$age,"c(75:100)='Elder';"c(55:74)='Middle age'";"else='Young'")
leadership$agecat<-recode(leadership$age,"c(75:100)='Elder';c(55:74)='Middle age';else='Young'")
leadership$agecat<-recode(leadership$age,"c(75:100)='Elder'; c(55:74)='Middle age';else='Young'")
leadership$agecat<-recode(leadership$age,"c(75:100)='Elder';c(55:74)='Middle age';else='Young'")
leadership$agecat<-recode(leadership$age,"c(75:100)='Elder',c(55:74)='Middle age';else='Young'")
leadership$agecat<-recode(leadership$age,"c(75:100)='Elder';c(55:74)='Middle age';else='Young'")
leadership$agecat<-recode(leadership$age,"c(75:100)='Elder';c(55:74)='Middle_age';else='Young'")
c(75:100)
leadership$agecat<-recode(leadership$age,"c(75:100)='Elder';else='Young'")
leadership$agecat<-recode(leadership$age,"[c(75:100)]='Elder';else='Young'")
leadership$agecat<-recode(leadership$age,"c(75,76,77,78)='Elder';else='Young'")
a<-c(75:100)
leadership$agecat<-recode(leadership$age,"a ='Elder';else='Young'")
a
c<-c(:54)
c<-c(1:54)
b<-c(55,74)
leadership$agecat<-recode(leadership$age,"a ='Elder';b='Middle age';else='Young'")
leadership$agecat
fix(leadership)
fix(leadership)
leadership
mydate<-as.Date(c("2019-03-11","2019-03-10"))
mydate
strdate<-c("11-03-2019","10-03-2019")
mydate1<-as.Date(strdate,"%d-%m-%y")
mydate1
strdate<-c("11-03-2018","10-03-2018")
mydate1<-as.Date(strdate,"%d-%m-%y")
mydate1
mydate1<-as.Date(strdate,"%d-%m-%Y")
mydate1
sys,data()
Sys.Date()
date()
order(leadership$age)
manager<-c(1,2,3,4,5)
date<-c("10/24/08", "10/28/08", "10/1/08", "10/12/08", "5/1/09")
country<-c("US","US","UK","UK","UK")
gender<-c("M","F","F","M","F")
age<-c(32,45,25,39,99)
q1<-c(5,3,3,3,2)
q2<-c(4,5,5,3,2)
q3<-c(5,2,5,4,1)
q4<-c(5,5,5,NA,2)
q5<-c(5,5,2,NA,1)
leadership<-data.frame(manager,date,country,gender,age,q1,q2,q3,q4,q5,stringsAsFactors = FALSE)
leadership$age[leadership$age == 99] <-NA
leadership$agecat[leadership$age>75]<-"Elder"
leadership$agecat[leadership$age>=55 & leadership$age<=75]<-"Middle Age"
leadership$agecat[leadership$age <55] <-"Young"
order(leadership$age)
leadership[order(leadership$age),]
leadership[order(leadership$age)]
?order()
leadership[order(leadership$age),1]
leadership[order(leadership$age),2]
leadership[order(leadership$age),1:11]
leadership[order(leadership$age),
leadership[order(leadership$age),]
leadership[order(leadership$age),leadership$age]
leadership[order(leadership$age),"age"]
leadership[2,1:11]
leadership[order(-leadership$age),"age"]
leadership[order(-leadership$age),"age"]
leadership[order(-leadership$age),]
mergetry<-merge(q1,q2)
mergetry
mergetry<-merge(q1,q2,by=a)
mergetry<-merge(q1,q2,by=q1)
mergetry<-cbind(q1,q2)
mergetry
mergetry<-rbind(q1,q2)
mergetry
mergetry2<-cbind(q1,q2)
mergetry2
b)
mergetry<-rbind(a,b)
a<-c(1,2,3)
b<-c(4,5)
mergetry<-rbind(a,b)
mergetry2<-cbind(a,b)
mergetry2
mergetry
append(b,6)
mergetry<-rbind(a,b)
append(b,6)
mergetry2<-cbind(a,b)
b<-append(b,6)
mergetry<-rbind(a,b)
mergetry
b<-c(4,5)
mergetry2<-cbind(a,b)
b<-c(4,5)
b<-append(b,6)
mergetry<-rbind(a,b)
mergetry
mergetry2<-cbind(a,b)
mergetry2
c<- (8,9,7)
c<- c(8,9,7)
newdata <- leadership[, c(6:10)]
newdata
newdata <- leadership[, 6:10]
newdata
newdata <- leadership[, 6:10]
newdata
newdata <- leadership[c("q1", "q2", "q3", "q4", "q5"), ]
newdata
newdata <- leadership[, 6:10]
newdata
newdata <- leadership[c("q1", "q2", "q3", "q4", "q5"), ]
newdata
newdata <- leadership[,c("q1", "q2", "q3", "q4", "q5")]
newdata
newdata <- leadership[c("q1", "q2", "q3", "q4", "q5")]
newdata
myvars <- paste("q", 1:5, sep="")
myvars
help("paste")
paste(1,2,sep = "")
newdata <- leadership[c(-8,-9)]
newdata
leadership$q3 <- leadership$q4 <- NULL
leadership
leadership<-data.frame(manager,date,country,gender,age,q1,q2,q3,q4,q5,stringsAsFactors = FALSE)
leadership$age[leadership$age == 99] <-NA
leadership$agecat[leadership$age>75]<-"Elder"
leadership$agecat[leadership$age>=55 & leadership$age<=75]<-"Middle Age"
leadership$agecat[leadership$age <55] <-"Young"
leadership
>subset()
?subset()
mysample <- leadership[sample(1:nrow(leadership), 3, replace=FALSE),]
nrow(leadership)
?subset()
mysample
library(sampling)
library(sampling)
library("sampling")
mysample <- leadership[sample(1:4, 3, replace=FALSE),]
nrow(leadership)
mysample
mysample <- leadership[sample(1:4, 3, replace=FALSE),]
nrow(leadership)
mysample
install.packages("sqldf")
library(sqldf)
newdf<=sqldf("select * from mtcats where carb=1 order by mpg")
newdf<-sqldf("select * from mtcats where carb=1 order by mpg")
newdf<-sqldf("select * from mtcars where carb=1 order by mpg")
newdf
leadership[order(,"age")]
leadership[order((leadership$age),"age")]
leadership[order(leadership$age),"age"]
nchar("ashwin")
x<-"Ashwin"
substr(x,2,4)
sunstr(x,2,4)<-222
sunstr(x,2,4)<-'222'
substr(x,2,4)<-'222'
x<-"Ashwin"
x[1]
x[1:1]
str(x)
substr(x,1,1)
x<-"ashwin"
toupper(substr(x,1,1))
x
substr(x,1,1) <= toupper(toupper(substr(x,1,1)))
x
substr(x,1,1) <- toupper(toupper(substr(x,1,1)))
xx
x
mydata<-matrix(rnorm(30),nrows = 6)
mydata<-matrix(rnorm(30),nrows = 6)
mydata<-matrix(rnorm(30),nrow = 6)
mydata
apply(mydaya,1,mean)
apply(mydata,1,mean)
round(apply(mydata,1,mean),2)
sample(1:10,1)
round(apply(mydata,1,mean,trim = 0.1),2)
round(apply(mydata,1,mean,trim = 0.2),2)
sapply(mydata, mean)
x<-sample(1:1000,50)
sapply(x, mean)
sapply(x,1:10, mean)
sapply(x,c(1:4), mean)
?sapply()
sapply(x,+1)
sapply(x,sum)
x<-list(sample(1:100,5))
sapply(x)
sapply(x,mean)
mean(x)
x<-sample(1:100,5)
mean(x)
set.seed(1234)
sapply(x,mean)
x<-list(sample(1:100,5))
sapply(x,mean)
mean(x)
x<-sample(1:100,5)
mean(x)
options(digits = 2)
roster
Student <- c("John Davis","Angela Williams","Bullwinkle Moose",
"David Jones","Janice Markhammer",
"Cheryl Cushing","Reuven Ytzrhak",
"Greg Knox","Joel England","Mary Rayburn")
math <- c(502, 600, 412, 358, 495, 512, 410, 625, 573, 522)
science <- c(95, 99, 80, 82, 75, 85, 80, 95, 89, 86)
english <- c(25, 22, 18, 15, 20, 28, 15, 30, 27, 18)
roster <- data.frame(Student,math,science,english,
stringsAsFactors = FALSE)
roster
z<-scale(roster[,2:4])
z
score<-apply(z,1,mean)
z
score
cbind(roster,score)
roster
cbind(roster,score)
roster
cbind(roster,score)
roster
roster<-cbind(roster,score)
roster
y<-quantile(roster$score,c(0.2,0.4,0.6,0.8))
y
y<-quantile(roster$score,c(.8,.6,.4,.2)
y<-quantile(roster$score,c(.8,.6,.4,.2))
y
y<-quantile(roster$score,c(.8,.6,.4,.2))
y
roster$grade[roster$score>=y[1]]<="A"
roster$grade[roster$score>=y[1]]<="A"
roster$grade[roster$score<y[1]&roster$score>=y[2]]<="B"
roster$grade[roster$score<y[2]&roster$score>=y[3]]<="C"
roster$grade[roster$score<y[3]&roster$score>=y[4]]<="D"
roster$grade[roster$score<y[4]]<="F"
roster
roster$grade[roster$score>=y[1]]<="A"
roster$grade[roster$score>=y[1]]<-"A"
roster$grade[roster$score<y[1]&roster$score>=y[2]]<-"B"
roster$grade[roster$score<y[2]&roster$score>=y[3]]<-"C"
roster$grade[roster$score<y[3]&roster$score>=y[4]]<-"D"
roster$grade[roster$score<y[4]]<-"F"
roster
strsplit(roster$Student," ")
name <-strsplit(roster$Student," ")
name <-strsplit(roster$Student," ")
name
firstname<-sapply(name, "[",1)
firstname<-sapply(name, "[",1)
lastname<-sapply(name,"[",2)
roster<-cbind(firstname,lastname,roster[,-1])
roster
roster<-order(roster$firstname,roster$lastname)
roster
Student <- c("John Davis","Angela Williams","Bullwinkle Moose",
"David Jones","Janice Markhammer",
"Cheryl Cushing","Reuven Ytzrhak",
"Greg Knox","Joel England","Mary Rayburn")
math <- c(502, 600, 412, 358, 495, 512, 410, 625, 573, 522)
science <- c(95, 99, 80, 82, 75, 85, 80, 95, 89, 86)
english <- c(25, 22, 18, 15, 20, 28, 15, 30, 27, 18)
roster <- data.frame(Student,math,science,english,
stringsAsFactors = FALSE)
options(digits = 2)
roster
z<-scale(roster[,2:4])
z
score<-apply(z,1,mean)
score
roster<-cbind(roster,score)
roster
y<-quantile(roster$score,c(.8,.6,.4,.2))
y
roster$grade[roster$score>=y[1]]<-"A"
roster$grade[roster$score<y[1]&roster$score>=y[2]]<-"B"
roster$grade[roster$score<y[2]&roster$score>=y[3]]<-"C"
roster$grade[roster$score<y[3]&roster$score>=y[4]]<-"D"
roster$grade[roster$score<y[4]]<-"F"
roster
name <-strsplit(roster$Student," ")
name
firstname<-sapply(name, "[",1)
lastname<-sapply(name,"[",2)
roster<-cbind(firstname,lastname,roster[,-1])
roste
roster
roster[order(lastname,firstname),]
